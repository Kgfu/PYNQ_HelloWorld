-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity colordetect_accel_colorthresholding_9_0_3_2160_3840_1_s is
port (
    rgb2hsv_4100_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    rgb2hsv_4100_empty_n : IN STD_LOGIC;
    rgb2hsv_4100_read : OUT STD_LOGIC;
    imgHelper1_4101_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    imgHelper1_4101_full_n : IN STD_LOGIC;
    imgHelper1_4101_write : OUT STD_LOGIC;
    p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_mat_rows_empty_n : IN STD_LOGIC;
    p_src_mat_rows_read : OUT STD_LOGIC;
    p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_mat_cols_empty_n : IN STD_LOGIC;
    p_src_mat_cols_read : OUT STD_LOGIC;
    low_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    low_thresh_ce0 : OUT STD_LOGIC;
    low_thresh_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    low_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    low_thresh_we0 : OUT STD_LOGIC;
    low_thresh_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    low_thresh_ce1 : OUT STD_LOGIC;
    low_thresh_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    low_thresh_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    low_thresh_we1 : OUT STD_LOGIC;
    high_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    high_thresh_ce0 : OUT STD_LOGIC;
    high_thresh_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    high_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    high_thresh_we0 : OUT STD_LOGIC;
    high_thresh_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    high_thresh_ce1 : OUT STD_LOGIC;
    high_thresh_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    high_thresh_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    high_thresh_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    low_thresh_empty_n : IN STD_LOGIC;
    low_thresh_read : OUT STD_LOGIC;
    high_thresh_empty_n : IN STD_LOGIC;
    high_thresh_read : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of colordetect_accel_colorthresholding_9_0_3_2160_3840_1_s is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_start : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_done : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_continue : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_idle : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_start_out : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_start_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce1 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce1 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_full_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_full_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_write : STD_LOGIC;
    signal ap_channel_done_high_th_2_2 : STD_LOGIC;
    signal high_th_2_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_2_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_2_2 : STD_LOGIC;
    signal ap_channel_done_high_th_2_1 : STD_LOGIC;
    signal high_th_2_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_2_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_2_1 : STD_LOGIC;
    signal ap_channel_done_high_th_2_0 : STD_LOGIC;
    signal high_th_2_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_2_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_2_0 : STD_LOGIC;
    signal ap_channel_done_low_th_2_2 : STD_LOGIC;
    signal low_th_2_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_2_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_2_2 : STD_LOGIC;
    signal ap_channel_done_low_th_2_1 : STD_LOGIC;
    signal low_th_2_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_2_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_2_1 : STD_LOGIC;
    signal ap_channel_done_low_th_2_0 : STD_LOGIC;
    signal low_th_2_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_2_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_2_0 : STD_LOGIC;
    signal ap_channel_done_high_th_1_2 : STD_LOGIC;
    signal high_th_1_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_1_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_1_2 : STD_LOGIC;
    signal ap_channel_done_high_th_1_1 : STD_LOGIC;
    signal high_th_1_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_1_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_1_1 : STD_LOGIC;
    signal ap_channel_done_high_th_1_0 : STD_LOGIC;
    signal high_th_1_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_1_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_1_0 : STD_LOGIC;
    signal ap_channel_done_low_th_1_2 : STD_LOGIC;
    signal low_th_1_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_1_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_1_2 : STD_LOGIC;
    signal ap_channel_done_low_th_1_1 : STD_LOGIC;
    signal low_th_1_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_1_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_1_1 : STD_LOGIC;
    signal ap_channel_done_low_th_1_0 : STD_LOGIC;
    signal low_th_1_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_1_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_1_0 : STD_LOGIC;
    signal ap_channel_done_high_th_0_2 : STD_LOGIC;
    signal high_th_0_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_0_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_0_2 : STD_LOGIC;
    signal ap_channel_done_high_th_0_1 : STD_LOGIC;
    signal high_th_0_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_0_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_0_1 : STD_LOGIC;
    signal ap_channel_done_high_th_0_0 : STD_LOGIC;
    signal high_th_0_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_high_th_0_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_high_th_0_0 : STD_LOGIC;
    signal ap_channel_done_low_th_0_2 : STD_LOGIC;
    signal low_th_0_2_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_0_2 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_0_2 : STD_LOGIC;
    signal ap_channel_done_low_th_0_1 : STD_LOGIC;
    signal low_th_0_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_0_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_0_1 : STD_LOGIC;
    signal ap_channel_done_low_th_0_0 : STD_LOGIC;
    signal low_th_0_0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_low_th_0_0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_low_th_0_0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_start : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_continue : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_idle : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_ready : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_rows_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_cols_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_img_width_loc_i_channel : STD_LOGIC;
    signal img_width_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_width_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_width_loc_i_channel : STD_LOGIC;
    signal ap_channel_done_img_height_loc_i_channel : STD_LOGIC;
    signal img_height_loc_i_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_img_height_loc_i_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_img_height_loc_i_channel : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_start : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_done : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_continue : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_idle : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_rgb2hsv_4100_read : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal p_src_mat_rows_c_i_full_n : STD_LOGIC;
    signal p_src_mat_rows_c_i_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal p_src_mat_rows_c_i_empty_n : STD_LOGIC;
    signal p_src_mat_cols_c_i_full_n : STD_LOGIC;
    signal p_src_mat_cols_c_i_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal p_src_mat_cols_c_i_empty_n : STD_LOGIC;
    signal low_th_0_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_0_0_empty_n : STD_LOGIC;
    signal low_th_0_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_0_1_empty_n : STD_LOGIC;
    signal low_th_0_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_0_2_empty_n : STD_LOGIC;
    signal high_th_0_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_0_0_empty_n : STD_LOGIC;
    signal high_th_0_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_0_1_empty_n : STD_LOGIC;
    signal high_th_0_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_0_2_empty_n : STD_LOGIC;
    signal low_th_1_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_1_0_empty_n : STD_LOGIC;
    signal low_th_1_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_1_1_empty_n : STD_LOGIC;
    signal low_th_1_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_1_2_empty_n : STD_LOGIC;
    signal high_th_1_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_1_0_empty_n : STD_LOGIC;
    signal high_th_1_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_1_1_empty_n : STD_LOGIC;
    signal high_th_1_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_1_2_empty_n : STD_LOGIC;
    signal low_th_2_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_2_0_empty_n : STD_LOGIC;
    signal low_th_2_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_2_1_empty_n : STD_LOGIC;
    signal low_th_2_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal low_th_2_2_empty_n : STD_LOGIC;
    signal high_th_2_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_2_0_empty_n : STD_LOGIC;
    signal high_th_2_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_2_1_empty_n : STD_LOGIC;
    signal high_th_2_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal high_th_2_2_empty_n : STD_LOGIC;
    signal img_height_loc_i_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_loc_i_channel_empty_n : STD_LOGIC;
    signal img_width_loc_i_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal img_width_loc_i_channel_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready : STD_LOGIC;
    signal start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_full_n : STD_LOGIC;
    signal start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_empty_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_start_full_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_start_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_start_full_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_start_write : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_start_full_n : STD_LOGIC;
    signal xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_entry28 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        p_src_mat_rows_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat_rows_out_full_n : IN STD_LOGIC;
        p_src_mat_rows_out_write : OUT STD_LOGIC;
        p_src_mat_cols_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat_cols_out_full_n : IN STD_LOGIC;
        p_src_mat_cols_out_write : OUT STD_LOGIC );
    end component;


    component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        low_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        low_thresh_ce0 : OUT STD_LOGIC;
        low_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        low_thresh_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        low_thresh_ce1 : OUT STD_LOGIC;
        low_thresh_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        high_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        high_thresh_ce0 : OUT STD_LOGIC;
        high_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        high_thresh_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        high_thresh_ce1 : OUT STD_LOGIC;
        high_thresh_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component colordetect_accel_xFInRange_9_0_2160_3840_15_0_1_9_1_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rgb2hsv_4100_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        rgb2hsv_4100_empty_n : IN STD_LOGIC;
        rgb2hsv_4100_read : OUT STD_LOGIC;
        imgHelper1_4101_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper1_4101_full_n : IN STD_LOGIC;
        imgHelper1_4101_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component colordetect_accel_fifo_w16_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w8_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2dEe IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    colorthresholding_9_0_3_2160_3840_1_entry28_U0 : component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_entry28
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_start,
        start_full_n => start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_full_n,
        ap_done => colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_done,
        ap_continue => colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_continue,
        ap_idle => colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_idle,
        ap_ready => colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready,
        start_out => colorthresholding_9_0_3_2160_3840_1_entry28_U0_start_out,
        start_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_start_write,
        p_src_mat_rows_dout => p_src_mat_rows_dout,
        p_src_mat_rows_empty_n => p_src_mat_rows_empty_n,
        p_src_mat_rows_read => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => p_src_mat_cols_dout,
        p_src_mat_cols_empty_n => p_src_mat_cols_empty_n,
        p_src_mat_cols_read => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_read,
        p_src_mat_rows_out_din => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_din,
        p_src_mat_rows_out_full_n => p_src_mat_rows_c_i_full_n,
        p_src_mat_rows_out_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_write,
        p_src_mat_cols_out_din => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_din,
        p_src_mat_cols_out_full_n => p_src_mat_cols_c_i_full_n,
        p_src_mat_cols_out_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_write);

    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0 : component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start,
        ap_done => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done,
        ap_continue => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue,
        ap_idle => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle,
        ap_ready => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready,
        low_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address0,
        low_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce0,
        low_thresh_q0 => low_thresh_q0,
        low_thresh_address1 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address1,
        low_thresh_ce1 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce1,
        low_thresh_q1 => low_thresh_q1,
        high_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address0,
        high_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce0,
        high_thresh_q0 => high_thresh_q0,
        high_thresh_address1 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address1,
        high_thresh_ce1 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce1,
        high_thresh_q1 => high_thresh_q1,
        ap_return_0 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0,
        ap_return_1 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1,
        ap_return_2 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2,
        ap_return_3 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3,
        ap_return_4 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4,
        ap_return_5 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5,
        ap_return_6 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6,
        ap_return_7 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7,
        ap_return_8 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8,
        ap_return_9 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9,
        ap_return_10 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10,
        ap_return_11 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11,
        ap_return_12 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12,
        ap_return_13 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13,
        ap_return_14 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14,
        ap_return_15 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15,
        ap_return_16 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16,
        ap_return_17 => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17);

    colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0 : component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_start,
        ap_done => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done,
        ap_continue => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_continue,
        ap_idle => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_idle,
        ap_ready => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_ready,
        p_src_mat_rows_dout => p_src_mat_rows_c_i_dout,
        p_src_mat_rows_empty_n => p_src_mat_rows_c_i_empty_n,
        p_src_mat_rows_read => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => p_src_mat_cols_c_i_dout,
        p_src_mat_cols_empty_n => p_src_mat_cols_c_i_empty_n,
        p_src_mat_cols_read => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_cols_read,
        ap_return_0 => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_0,
        ap_return_1 => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_1);

    xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0 : component colordetect_accel_xFInRange_9_0_2160_3840_15_0_1_9_1_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_start,
        ap_done => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_done,
        ap_continue => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_continue,
        ap_idle => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_idle,
        ap_ready => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready,
        rgb2hsv_4100_dout => rgb2hsv_4100_dout,
        rgb2hsv_4100_empty_n => rgb2hsv_4100_empty_n,
        rgb2hsv_4100_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_rgb2hsv_4100_read,
        imgHelper1_4101_din => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_din,
        imgHelper1_4101_full_n => imgHelper1_4101_full_n,
        imgHelper1_4101_write => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_write,
        p_read => low_th_0_0_dout,
        p_read1 => low_th_0_1_dout,
        p_read2 => low_th_0_2_dout,
        p_read3 => low_th_1_0_dout,
        p_read4 => low_th_1_1_dout,
        p_read5 => low_th_1_2_dout,
        p_read6 => low_th_2_0_dout,
        p_read7 => low_th_2_1_dout,
        p_read8 => low_th_2_2_dout,
        p_read9 => high_th_0_0_dout,
        p_read10 => high_th_0_1_dout,
        p_read11 => high_th_0_2_dout,
        p_read12 => high_th_1_0_dout,
        p_read13 => high_th_1_1_dout,
        p_read14 => high_th_1_2_dout,
        p_read15 => high_th_2_0_dout,
        p_read16 => high_th_2_1_dout,
        p_read17 => high_th_2_2_dout,
        p_read18 => img_height_loc_i_channel_dout,
        p_read19 => img_width_loc_i_channel_dout);

    p_src_mat_rows_c_i_U : component colordetect_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_din,
        if_full_n => p_src_mat_rows_c_i_full_n,
        if_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_out_write,
        if_dout => p_src_mat_rows_c_i_dout,
        if_empty_n => p_src_mat_rows_c_i_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_rows_read);

    p_src_mat_cols_c_i_U : component colordetect_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_din,
        if_full_n => p_src_mat_cols_c_i_full_n,
        if_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_out_write,
        if_dout => p_src_mat_cols_c_i_dout,
        if_empty_n => p_src_mat_cols_c_i_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_p_src_mat_cols_read);

    low_th_0_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0,
        if_full_n => low_th_0_0_full_n,
        if_write => ap_channel_done_low_th_0_0,
        if_dout => low_th_0_0_dout,
        if_empty_n => low_th_0_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_0_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1,
        if_full_n => low_th_0_1_full_n,
        if_write => ap_channel_done_low_th_0_1,
        if_dout => low_th_0_1_dout,
        if_empty_n => low_th_0_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_0_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2,
        if_full_n => low_th_0_2_full_n,
        if_write => ap_channel_done_low_th_0_2,
        if_dout => low_th_0_2_dout,
        if_empty_n => low_th_0_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_0_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3,
        if_full_n => high_th_0_0_full_n,
        if_write => ap_channel_done_high_th_0_0,
        if_dout => high_th_0_0_dout,
        if_empty_n => high_th_0_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_0_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4,
        if_full_n => high_th_0_1_full_n,
        if_write => ap_channel_done_high_th_0_1,
        if_dout => high_th_0_1_dout,
        if_empty_n => high_th_0_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_0_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5,
        if_full_n => high_th_0_2_full_n,
        if_write => ap_channel_done_high_th_0_2,
        if_dout => high_th_0_2_dout,
        if_empty_n => high_th_0_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_1_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6,
        if_full_n => low_th_1_0_full_n,
        if_write => ap_channel_done_low_th_1_0,
        if_dout => low_th_1_0_dout,
        if_empty_n => low_th_1_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_1_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7,
        if_full_n => low_th_1_1_full_n,
        if_write => ap_channel_done_low_th_1_1,
        if_dout => low_th_1_1_dout,
        if_empty_n => low_th_1_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_1_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8,
        if_full_n => low_th_1_2_full_n,
        if_write => ap_channel_done_low_th_1_2,
        if_dout => low_th_1_2_dout,
        if_empty_n => low_th_1_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_1_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9,
        if_full_n => high_th_1_0_full_n,
        if_write => ap_channel_done_high_th_1_0,
        if_dout => high_th_1_0_dout,
        if_empty_n => high_th_1_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_1_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10,
        if_full_n => high_th_1_1_full_n,
        if_write => ap_channel_done_high_th_1_1,
        if_dout => high_th_1_1_dout,
        if_empty_n => high_th_1_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_1_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11,
        if_full_n => high_th_1_2_full_n,
        if_write => ap_channel_done_high_th_1_2,
        if_dout => high_th_1_2_dout,
        if_empty_n => high_th_1_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_2_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12,
        if_full_n => low_th_2_0_full_n,
        if_write => ap_channel_done_low_th_2_0,
        if_dout => low_th_2_0_dout,
        if_empty_n => low_th_2_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_2_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13,
        if_full_n => low_th_2_1_full_n,
        if_write => ap_channel_done_low_th_2_1,
        if_dout => low_th_2_1_dout,
        if_empty_n => low_th_2_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    low_th_2_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14,
        if_full_n => low_th_2_2_full_n,
        if_write => ap_channel_done_low_th_2_2,
        if_dout => low_th_2_2_dout,
        if_empty_n => low_th_2_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_2_0_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15,
        if_full_n => high_th_2_0_full_n,
        if_write => ap_channel_done_high_th_2_0,
        if_dout => high_th_2_0_dout,
        if_empty_n => high_th_2_0_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_2_1_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16,
        if_full_n => high_th_2_1_full_n,
        if_write => ap_channel_done_high_th_2_1,
        if_dout => high_th_2_1_dout,
        if_empty_n => high_th_2_1_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    high_th_2_2_U : component colordetect_accel_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17,
        if_full_n => high_th_2_2_full_n,
        if_write => ap_channel_done_high_th_2_2,
        if_dout => high_th_2_2_dout,
        if_empty_n => high_th_2_2_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    img_height_loc_i_channel_U : component colordetect_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_0,
        if_full_n => img_height_loc_i_channel_full_n,
        if_write => ap_channel_done_img_height_loc_i_channel,
        if_dout => img_height_loc_i_channel_dout,
        if_empty_n => img_height_loc_i_channel_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    img_width_loc_i_channel_U : component colordetect_accel_fifo_w16_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_return_1,
        if_full_n => img_width_loc_i_channel_full_n,
        if_write => ap_channel_done_img_width_loc_i_channel,
        if_dout => img_width_loc_i_channel_dout,
        if_empty_n => img_width_loc_i_channel_empty_n,
        if_read => xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_ready);

    start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2dEe_U : component colordetect_accel_start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2dEe
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_din,
        if_full_n => start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_full_n,
        if_write => colorthresholding_9_0_3_2160_3840_1_entry28_U0_start_write,
        if_dout => start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_dout,
        if_empty_n => start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_ready);





    ap_sync_reg_channel_write_high_th_0_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_0_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_0_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_0_0 <= ap_sync_channel_write_high_th_0_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_0_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_0_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_0_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_0_1 <= ap_sync_channel_write_high_th_0_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_0_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_0_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_0_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_0_2 <= ap_sync_channel_write_high_th_0_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_1_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_1_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_1_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_1_0 <= ap_sync_channel_write_high_th_1_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_1_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_1_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_1_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_1_1 <= ap_sync_channel_write_high_th_1_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_1_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_1_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_1_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_1_2 <= ap_sync_channel_write_high_th_1_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_2_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_2_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_2_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_2_0 <= ap_sync_channel_write_high_th_2_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_2_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_2_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_2_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_2_1 <= ap_sync_channel_write_high_th_2_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_high_th_2_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_high_th_2_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_high_th_2_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_high_th_2_2 <= ap_sync_channel_write_high_th_2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_height_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_img_height_loc_i_channel <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_height_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_height_loc_i_channel <= ap_sync_channel_write_img_height_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_img_width_loc_i_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_img_width_loc_i_channel <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_img_width_loc_i_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_img_width_loc_i_channel <= ap_sync_channel_write_img_width_loc_i_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_0_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_0_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_0_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_0_0 <= ap_sync_channel_write_low_th_0_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_0_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_0_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_0_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_0_1 <= ap_sync_channel_write_low_th_0_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_0_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_0_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_0_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_0_2 <= ap_sync_channel_write_low_th_0_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_1_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_1_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_1_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_1_0 <= ap_sync_channel_write_low_th_1_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_1_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_1_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_1_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_1_1 <= ap_sync_channel_write_low_th_1_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_1_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_1_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_1_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_1_2 <= ap_sync_channel_write_low_th_1_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_2_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_2_0 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_2_0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_2_0 <= ap_sync_channel_write_low_th_2_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_2_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_2_1 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_2_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_2_1 <= ap_sync_channel_write_low_th_2_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_low_th_2_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_low_th_2_2 <= ap_const_logic_0;
            else
                if (((colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_low_th_2_2 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_low_th_2_2 <= ap_sync_channel_write_low_th_2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= ap_sync_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready <= ap_sync_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_high_th_0_0 <= ((ap_sync_reg_channel_write_high_th_0_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_0_1 <= ((ap_sync_reg_channel_write_high_th_0_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_0_2 <= ((ap_sync_reg_channel_write_high_th_0_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_1_0 <= ((ap_sync_reg_channel_write_high_th_1_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_1_1 <= ((ap_sync_reg_channel_write_high_th_1_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_1_2 <= ((ap_sync_reg_channel_write_high_th_1_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_2_0 <= ((ap_sync_reg_channel_write_high_th_2_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_2_1 <= ((ap_sync_reg_channel_write_high_th_2_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_high_th_2_2 <= ((ap_sync_reg_channel_write_high_th_2_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_img_height_loc_i_channel <= ((ap_sync_reg_channel_write_img_height_loc_i_channel xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done);
    ap_channel_done_img_width_loc_i_channel <= ((ap_sync_reg_channel_write_img_width_loc_i_channel xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_done);
    ap_channel_done_low_th_0_0 <= ((ap_sync_reg_channel_write_low_th_0_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_0_1 <= ((ap_sync_reg_channel_write_low_th_0_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_0_2 <= ((ap_sync_reg_channel_write_low_th_0_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_1_0 <= ((ap_sync_reg_channel_write_low_th_1_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_1_1 <= ((ap_sync_reg_channel_write_low_th_1_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_1_2 <= ((ap_sync_reg_channel_write_low_th_1_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_2_0 <= ((ap_sync_reg_channel_write_low_th_2_0 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_2_1 <= ((ap_sync_reg_channel_write_low_th_2_1 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_channel_done_low_th_2_2 <= ((ap_sync_reg_channel_write_low_th_2_2 xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);
    ap_done <= xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_done;
    ap_idle <= (xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_idle and (img_width_loc_i_channel_empty_n xor ap_const_logic_1) and (img_height_loc_i_channel_empty_n xor ap_const_logic_1) and (high_th_2_2_empty_n xor ap_const_logic_1) and (high_th_2_1_empty_n xor ap_const_logic_1) and (high_th_2_0_empty_n xor ap_const_logic_1) and (low_th_2_2_empty_n xor ap_const_logic_1) and (low_th_2_1_empty_n xor ap_const_logic_1) and (low_th_2_0_empty_n xor ap_const_logic_1) and (high_th_1_2_empty_n xor ap_const_logic_1) and (high_th_1_1_empty_n xor ap_const_logic_1) and (high_th_1_0_empty_n xor ap_const_logic_1) and (low_th_1_2_empty_n xor ap_const_logic_1) and (low_th_1_1_empty_n xor ap_const_logic_1) and (low_th_1_0_empty_n xor ap_const_logic_1) and (high_th_0_2_empty_n xor ap_const_logic_1) and (high_th_0_1_empty_n xor ap_const_logic_1) and (high_th_0_0_empty_n xor ap_const_logic_1) and (low_th_0_2_empty_n xor ap_const_logic_1) and (low_th_0_1_empty_n xor ap_const_logic_1) and (low_th_0_0_empty_n xor ap_const_logic_1) and colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_idle and colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle and colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_high_th_0_0 <= ((high_th_0_0_full_n and ap_channel_done_high_th_0_0) or ap_sync_reg_channel_write_high_th_0_0);
    ap_sync_channel_write_high_th_0_1 <= ((high_th_0_1_full_n and ap_channel_done_high_th_0_1) or ap_sync_reg_channel_write_high_th_0_1);
    ap_sync_channel_write_high_th_0_2 <= ((high_th_0_2_full_n and ap_channel_done_high_th_0_2) or ap_sync_reg_channel_write_high_th_0_2);
    ap_sync_channel_write_high_th_1_0 <= ((high_th_1_0_full_n and ap_channel_done_high_th_1_0) or ap_sync_reg_channel_write_high_th_1_0);
    ap_sync_channel_write_high_th_1_1 <= ((high_th_1_1_full_n and ap_channel_done_high_th_1_1) or ap_sync_reg_channel_write_high_th_1_1);
    ap_sync_channel_write_high_th_1_2 <= ((high_th_1_2_full_n and ap_channel_done_high_th_1_2) or ap_sync_reg_channel_write_high_th_1_2);
    ap_sync_channel_write_high_th_2_0 <= ((high_th_2_0_full_n and ap_channel_done_high_th_2_0) or ap_sync_reg_channel_write_high_th_2_0);
    ap_sync_channel_write_high_th_2_1 <= ((high_th_2_1_full_n and ap_channel_done_high_th_2_1) or ap_sync_reg_channel_write_high_th_2_1);
    ap_sync_channel_write_high_th_2_2 <= ((high_th_2_2_full_n and ap_channel_done_high_th_2_2) or ap_sync_reg_channel_write_high_th_2_2);
    ap_sync_channel_write_img_height_loc_i_channel <= ((img_height_loc_i_channel_full_n and ap_channel_done_img_height_loc_i_channel) or ap_sync_reg_channel_write_img_height_loc_i_channel);
    ap_sync_channel_write_img_width_loc_i_channel <= ((img_width_loc_i_channel_full_n and ap_channel_done_img_width_loc_i_channel) or ap_sync_reg_channel_write_img_width_loc_i_channel);
    ap_sync_channel_write_low_th_0_0 <= ((low_th_0_0_full_n and ap_channel_done_low_th_0_0) or ap_sync_reg_channel_write_low_th_0_0);
    ap_sync_channel_write_low_th_0_1 <= ((low_th_0_1_full_n and ap_channel_done_low_th_0_1) or ap_sync_reg_channel_write_low_th_0_1);
    ap_sync_channel_write_low_th_0_2 <= ((low_th_0_2_full_n and ap_channel_done_low_th_0_2) or ap_sync_reg_channel_write_low_th_0_2);
    ap_sync_channel_write_low_th_1_0 <= ((low_th_1_0_full_n and ap_channel_done_low_th_1_0) or ap_sync_reg_channel_write_low_th_1_0);
    ap_sync_channel_write_low_th_1_1 <= ((low_th_1_1_full_n and ap_channel_done_low_th_1_1) or ap_sync_reg_channel_write_low_th_1_1);
    ap_sync_channel_write_low_th_1_2 <= ((low_th_1_2_full_n and ap_channel_done_low_th_1_2) or ap_sync_reg_channel_write_low_th_1_2);
    ap_sync_channel_write_low_th_2_0 <= ((low_th_2_0_full_n and ap_channel_done_low_th_2_0) or ap_sync_reg_channel_write_low_th_2_0);
    ap_sync_channel_write_low_th_2_1 <= ((low_th_2_1_full_n and ap_channel_done_low_th_2_1) or ap_sync_reg_channel_write_low_th_2_1);
    ap_sync_channel_write_low_th_2_2 <= ((low_th_2_2_full_n and ap_channel_done_low_th_2_2) or ap_sync_reg_channel_write_low_th_2_2);
    ap_sync_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= (colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready or ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready);
    ap_sync_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready <= (colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready or ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_done;
    ap_sync_ready <= (ap_sync_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready and ap_sync_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready);
    colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_continue <= (ap_sync_channel_write_img_width_loc_i_channel and ap_sync_channel_write_img_height_loc_i_channel);
    colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_ap_start <= start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_empty_n;
    colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_start_full_n <= ap_const_logic_1;
    colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_start_write <= ap_const_logic_0;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue <= (ap_sync_channel_write_low_th_2_2 and ap_sync_channel_write_low_th_2_1 and ap_sync_channel_write_low_th_2_0 and ap_sync_channel_write_low_th_1_2 and ap_sync_channel_write_low_th_1_1 and ap_sync_channel_write_low_th_1_0 and ap_sync_channel_write_low_th_0_2 and ap_sync_channel_write_low_th_0_1 and ap_sync_channel_write_low_th_0_0 and ap_sync_channel_write_high_th_2_2 and ap_sync_channel_write_high_th_2_1 and ap_sync_channel_write_high_th_2_0 and ap_sync_channel_write_high_th_1_2 and ap_sync_channel_write_high_th_1_1 and ap_sync_channel_write_high_th_1_0 and ap_sync_channel_write_high_th_0_2 and ap_sync_channel_write_high_th_0_1 and ap_sync_channel_write_high_th_0_0);
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start <= ((ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_full_n <= high_thresh_empty_n;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_write <= ap_const_logic_0;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_full_n <= low_thresh_empty_n;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_write <= ap_const_logic_0;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_start_full_n <= ap_const_logic_1;
    colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_start_write <= ap_const_logic_0;
    colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_continue <= ap_const_logic_1;
    colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_start <= ((ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_entry28_U0_ap_ready xor ap_const_logic_1) and ap_start);
    high_thresh_address0 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address0;
    high_thresh_address1 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_address1;
    high_thresh_ce0 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce0;
    high_thresh_ce1 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_ce1;
    high_thresh_d0 <= ap_const_lv8_0;
    high_thresh_d1 <= ap_const_lv8_0;
    high_thresh_read <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_high_thresh_write;
    high_thresh_we0 <= ap_const_logic_0;
    high_thresh_we1 <= ap_const_logic_0;
    imgHelper1_4101_din <= xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_din;
    imgHelper1_4101_write <= xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_imgHelper1_4101_write;
    low_thresh_address0 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address0;
    low_thresh_address1 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_address1;
    low_thresh_ce0 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce0;
    low_thresh_ce1 <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_ce1;
    low_thresh_d0 <= ap_const_lv8_0;
    low_thresh_d1 <= ap_const_lv8_0;
    low_thresh_read <= colorthresholding_9_0_3_2160_3840_1_Loop_VITIS_LOOP_138_1_proc_U0_low_thresh_write;
    low_thresh_we0 <= ap_const_logic_0;
    low_thresh_we1 <= ap_const_logic_0;
    p_src_mat_cols_read <= colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_cols_read;
    p_src_mat_rows_read <= colorthresholding_9_0_3_2160_3840_1_entry28_U0_p_src_mat_rows_read;
    rgb2hsv_4100_read <= xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_rgb2hsv_4100_read;
    start_for_colorthresholding_9_0_3_2160_3840_1_Block_colorthresholding_9_0_3_2160_3840_1_exit_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_continue <= ap_continue;
    xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_ap_start <= (low_th_2_2_empty_n and low_th_2_1_empty_n and low_th_2_0_empty_n and low_th_1_2_empty_n and low_th_1_1_empty_n and low_th_1_0_empty_n and low_th_0_2_empty_n and low_th_0_1_empty_n and low_th_0_0_empty_n and img_width_loc_i_channel_empty_n and img_height_loc_i_channel_empty_n and high_th_2_2_empty_n and high_th_2_1_empty_n and high_th_2_0_empty_n and high_th_1_2_empty_n and high_th_1_1_empty_n and high_th_1_0_empty_n and high_th_0_2_empty_n and high_th_0_1_empty_n and high_th_0_0_empty_n);
    xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_start_full_n <= ap_const_logic_1;
    xFInRange_9_0_2160_3840_15_0_1_9_1_3_U0_start_write <= ap_const_logic_0;
end behav;
