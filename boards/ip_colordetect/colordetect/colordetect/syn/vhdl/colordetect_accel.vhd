-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity colordetect_accel is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC );
end;


architecture behav of colordetect_accel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "colordetect_accel_colordetect_accel,hls_ip_2020_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.156071,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=33,HLS_SYN_DSP=0,HLS_SYN_FF=8753,HLS_SYN_LUT=8923,HLS_VERSION=2020_2_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal low_thresh_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal high_thresh_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_start : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_full_n : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_done : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_continue : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_idle : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_out : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_write : STD_LOGIC;
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_write : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_ap_start : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_ap_done : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_ap_continue : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_ap_idle : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_ap_ready : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_start_out : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_start_write : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_din : STD_LOGIC_VECTOR (23 downto 0);
    signal axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_write : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_src_TREADY : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_img_rows_read : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_img_cols_read : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_write : STD_LOGIC;
    signal axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_write : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_ap_start : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_ap_done : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_ap_continue : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_ap_idle : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_ap_ready : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_imgInput_499_read : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_din : STD_LOGIC_VECTOR (23 downto 0);
    signal bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_write : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_p_src_mat_rows_read : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_p_src_mat_cols_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_rgb2hsv_4100_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_din : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_ce0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_we0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_ce0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_we0 : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_rows_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_cols_read : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_ap_start : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_ap_done : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_ap_ready : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_ap_idle : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_ap_continue : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_start : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_done : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_continue : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_idle : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_ready : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper1_4101_read : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_din : STD_LOGIC_VECTOR (7 downto 0);
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_write : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_rows_read : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_cols_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_start : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_done : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_continue : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_idle : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_ready : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper2_4102_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_write : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_rows_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_cols_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_start : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_done : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_continue : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_idle : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_ready : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_write : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_ap_start : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_ap_done : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_ap_continue : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_ap_idle : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_ap_ready : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper1_4101_read : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_din : STD_LOGIC_VECTOR (7 downto 0);
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_write : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_ap_start : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_ap_done : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_ap_continue : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_ap_idle : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_ap_ready : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_imgOutput_4105_read : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_img_rows_read : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_img_cols_read : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TVALID : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2axis_24_0_2160_3840_1_U0_dst_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal imgInput_rows_c_full_n : STD_LOGIC;
    signal imgInput_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput_rows_c_empty_n : STD_LOGIC;
    signal imgInput_cols_c_full_n : STD_LOGIC;
    signal imgInput_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput_cols_c_empty_n : STD_LOGIC;
    signal rgb2hsv_rows_c_full_n : STD_LOGIC;
    signal rgb2hsv_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rgb2hsv_rows_c_empty_n : STD_LOGIC;
    signal rgb2hsv_cols_c_full_n : STD_LOGIC;
    signal rgb2hsv_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rgb2hsv_cols_c_empty_n : STD_LOGIC;
    signal imgHelper1_rows_c_full_n : STD_LOGIC;
    signal imgHelper1_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper1_rows_c_empty_n : STD_LOGIC;
    signal imgHelper1_cols_c_full_n : STD_LOGIC;
    signal imgHelper1_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper1_cols_c_empty_n : STD_LOGIC;
    signal imgHelper2_rows_c_full_n : STD_LOGIC;
    signal imgHelper2_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper2_rows_c_empty_n : STD_LOGIC;
    signal imgHelper2_cols_c_full_n : STD_LOGIC;
    signal imgHelper2_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper2_cols_c_empty_n : STD_LOGIC;
    signal imgHelper3_rows_c_full_n : STD_LOGIC;
    signal imgHelper3_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper3_rows_c_empty_n : STD_LOGIC;
    signal imgHelper3_cols_c_full_n : STD_LOGIC;
    signal imgHelper3_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper3_cols_c_empty_n : STD_LOGIC;
    signal imgHelper4_rows_c_full_n : STD_LOGIC;
    signal imgHelper4_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper4_rows_c_empty_n : STD_LOGIC;
    signal imgHelper4_cols_c_full_n : STD_LOGIC;
    signal imgHelper4_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgHelper4_cols_c_empty_n : STD_LOGIC;
    signal imgOutput_rows_c_full_n : STD_LOGIC;
    signal imgOutput_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgOutput_rows_c_empty_n : STD_LOGIC;
    signal imgOutput_cols_c_full_n : STD_LOGIC;
    signal imgOutput_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgOutput_cols_c_empty_n : STD_LOGIC;
    signal imgInput_data_full_n : STD_LOGIC;
    signal imgInput_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal imgInput_data_empty_n : STD_LOGIC;
    signal imgInput_rows_c19_full_n : STD_LOGIC;
    signal imgInput_rows_c19_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput_rows_c19_empty_n : STD_LOGIC;
    signal imgInput_cols_c20_full_n : STD_LOGIC;
    signal imgInput_cols_c20_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal imgInput_cols_c20_empty_n : STD_LOGIC;
    signal rgb2hsv_data_full_n : STD_LOGIC;
    signal rgb2hsv_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal rgb2hsv_data_empty_n : STD_LOGIC;
    signal imgHelper1_data_full_n : STD_LOGIC;
    signal imgHelper1_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgHelper1_data_empty_n : STD_LOGIC;
    signal imgHelper2_data_full_n : STD_LOGIC;
    signal imgHelper2_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgHelper2_data_empty_n : STD_LOGIC;
    signal imgHelper3_data_full_n : STD_LOGIC;
    signal imgHelper3_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgHelper3_data_empty_n : STD_LOGIC;
    signal imgHelper4_data_full_n : STD_LOGIC;
    signal imgHelper4_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgHelper4_data_empty_n : STD_LOGIC;
    signal imgOutput_data_full_n : STD_LOGIC;
    signal imgOutput_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgOutput_data_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready : STD_LOGIC;
    signal start_for_axis2xfMat_24_9_2160_3840_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_axis2xfMat_24_9_2160_3840_1_U0_full_n : STD_LOGIC;
    signal start_for_axis2xfMat_24_9_2160_3840_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_axis2xfMat_24_9_2160_3840_1_U0_empty_n : STD_LOGIC;
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_full_n : STD_LOGIC;
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_empty_n : STD_LOGIC;
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_full_n : STD_LOGIC;
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_empty_n : STD_LOGIC;
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_full_n : STD_LOGIC;
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_empty_n : STD_LOGIC;
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_full_n : STD_LOGIC;
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_empty_n : STD_LOGIC;
    signal start_for_xfMat2axis_24_0_2160_3840_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2axis_24_0_2160_3840_1_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2axis_24_0_2160_3840_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2axis_24_0_2160_3840_1_U0_empty_n : STD_LOGIC;
    signal start_for_bgr2hsv_9_2160_3840_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_bgr2hsv_9_2160_3840_1_U0_full_n : STD_LOGIC;
    signal start_for_bgr2hsv_9_2160_3840_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_bgr2hsv_9_2160_3840_1_U0_empty_n : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_start_full_n : STD_LOGIC;
    signal bgr2hsv_9_2160_3840_1_U0_start_write : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_start_full_n : STD_LOGIC;
    signal colorthresholding_9_0_3_2160_3840_1_U0_start_write : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_start_full_n : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_11_U0_start_write : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_start_full_n : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_12_U0_start_write : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_start_full_n : STD_LOGIC;
    signal dilate_0_0_2160_3840_0_3_3_1_1_U0_start_write : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_start_full_n : STD_LOGIC;
    signal erode_0_0_2160_3840_0_3_3_1_1_U0_start_write : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_start_full_n : STD_LOGIC;
    signal xfMat2axis_24_0_2160_3840_1_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component colordetect_accel_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        imgInput_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgInput_rows_out_full_n : IN STD_LOGIC;
        imgInput_rows_out_write : OUT STD_LOGIC;
        imgInput_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgInput_cols_out_full_n : IN STD_LOGIC;
        imgInput_cols_out_write : OUT STD_LOGIC;
        rgb2hsv_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rgb2hsv_rows_out_full_n : IN STD_LOGIC;
        rgb2hsv_rows_out_write : OUT STD_LOGIC;
        rgb2hsv_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rgb2hsv_cols_out_full_n : IN STD_LOGIC;
        rgb2hsv_cols_out_write : OUT STD_LOGIC;
        imgHelper1_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper1_rows_out_full_n : IN STD_LOGIC;
        imgHelper1_rows_out_write : OUT STD_LOGIC;
        imgHelper1_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper1_cols_out_full_n : IN STD_LOGIC;
        imgHelper1_cols_out_write : OUT STD_LOGIC;
        imgHelper2_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper2_rows_out_full_n : IN STD_LOGIC;
        imgHelper2_rows_out_write : OUT STD_LOGIC;
        imgHelper2_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper2_cols_out_full_n : IN STD_LOGIC;
        imgHelper2_cols_out_write : OUT STD_LOGIC;
        imgHelper3_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper3_rows_out_full_n : IN STD_LOGIC;
        imgHelper3_rows_out_write : OUT STD_LOGIC;
        imgHelper3_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper3_cols_out_full_n : IN STD_LOGIC;
        imgHelper3_cols_out_write : OUT STD_LOGIC;
        imgHelper4_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper4_rows_out_full_n : IN STD_LOGIC;
        imgHelper4_rows_out_write : OUT STD_LOGIC;
        imgHelper4_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgHelper4_cols_out_full_n : IN STD_LOGIC;
        imgHelper4_cols_out_write : OUT STD_LOGIC;
        imgOutput_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgOutput_rows_out_full_n : IN STD_LOGIC;
        imgOutput_rows_out_write : OUT STD_LOGIC;
        imgOutput_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        imgOutput_cols_out_full_n : IN STD_LOGIC;
        imgOutput_cols_out_write : OUT STD_LOGIC );
    end component;


    component colordetect_accel_axis2xfMat_24_9_2160_3840_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        imgInput_499_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        imgInput_499_full_n : IN STD_LOGIC;
        imgInput_499_write : OUT STD_LOGIC;
        src_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        src_TVALID : IN STD_LOGIC;
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        src_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_empty_n : IN STD_LOGIC;
        img_rows_read : OUT STD_LOGIC;
        img_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_empty_n : IN STD_LOGIC;
        img_cols_read : OUT STD_LOGIC;
        img_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_out_full_n : IN STD_LOGIC;
        img_rows_out_write : OUT STD_LOGIC;
        img_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_out_full_n : IN STD_LOGIC;
        img_cols_out_write : OUT STD_LOGIC );
    end component;


    component colordetect_accel_bgr2hsv_9_2160_3840_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgInput_499_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        imgInput_499_empty_n : IN STD_LOGIC;
        imgInput_499_read : OUT STD_LOGIC;
        rgb2hsv_4100_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        rgb2hsv_4100_full_n : IN STD_LOGIC;
        rgb2hsv_4100_write : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC );
    end component;


    component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_s IS
    port (
        rgb2hsv_4100_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        rgb2hsv_4100_empty_n : IN STD_LOGIC;
        rgb2hsv_4100_read : OUT STD_LOGIC;
        imgHelper1_4101_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper1_4101_full_n : IN STD_LOGIC;
        imgHelper1_4101_write : OUT STD_LOGIC;
        low_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        low_thresh_ce0 : OUT STD_LOGIC;
        low_thresh_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        low_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        low_thresh_we0 : OUT STD_LOGIC;
        high_thresh_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        high_thresh_ce0 : OUT STD_LOGIC;
        high_thresh_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        high_thresh_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        high_thresh_we0 : OUT STD_LOGIC;
        p_src_mat_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_rows_empty_n : IN STD_LOGIC;
        p_src_mat_rows_read : OUT STD_LOGIC;
        p_src_mat_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_empty_n : IN STD_LOGIC;
        p_src_mat_cols_read : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component colordetect_accel_erode_0_0_2160_3840_0_3_3_1_1_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgHelper1_4101_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgHelper1_4101_empty_n : IN STD_LOGIC;
        imgHelper1_4101_read : OUT STD_LOGIC;
        imgHelper2_4102_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper2_4102_full_n : IN STD_LOGIC;
        imgHelper2_4102_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC );
    end component;


    component colordetect_accel_dilate_0_0_2160_3840_0_3_3_1_1_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgHelper2_4102_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgHelper2_4102_empty_n : IN STD_LOGIC;
        imgHelper2_4102_read : OUT STD_LOGIC;
        imgHelper3_4103_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper3_4103_full_n : IN STD_LOGIC;
        imgHelper3_4103_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC );
    end component;


    component colordetect_accel_dilate_0_0_2160_3840_0_3_3_1_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgHelper2_4102_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgHelper2_4102_empty_n : IN STD_LOGIC;
        imgHelper2_4102_read : OUT STD_LOGIC;
        imgHelper3_4103_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper3_4103_full_n : IN STD_LOGIC;
        imgHelper3_4103_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC );
    end component;


    component colordetect_accel_erode_0_0_2160_3840_0_3_3_1_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgHelper1_4101_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgHelper1_4101_empty_n : IN STD_LOGIC;
        imgHelper1_4101_read : OUT STD_LOGIC;
        imgHelper2_4102_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        imgHelper2_4102_full_n : IN STD_LOGIC;
        imgHelper2_4102_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC );
    end component;


    component colordetect_accel_xfMat2axis_24_0_2160_3840_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        imgOutput_4105_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        imgOutput_4105_empty_n : IN STD_LOGIC;
        imgOutput_4105_read : OUT STD_LOGIC;
        img_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_empty_n : IN STD_LOGIC;
        img_rows_read : OUT STD_LOGIC;
        img_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_empty_n : IN STD_LOGIC;
        img_cols_read : OUT STD_LOGIC;
        dst_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        dst_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component colordetect_accel_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d4_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d5_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d6_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d7_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d8_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w32_d9_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_axis2xfMat_24_9_2160_3840_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_erode_0_0_2160_3840_0_3_3_1_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_xfMat2axis_24_0_2160_3840_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_start_for_bgr2hsv_9_2160_3840_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component colordetect_accel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        low_thresh_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        low_thresh_ce0 : IN STD_LOGIC;
        low_thresh_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        high_thresh_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        high_thresh_ce0 : IN STD_LOGIC;
        high_thresh_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component colordetect_accel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        low_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_address0,
        low_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_ce0,
        low_thresh_q0 => low_thresh_q0,
        high_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_address0,
        high_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_ce0,
        high_thresh_q0 => high_thresh_q0,
        rows => rows,
        cols => cols,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0 : component colordetect_accel_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_start,
        start_full_n => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_full_n,
        ap_done => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_done,
        ap_continue => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_continue,
        ap_idle => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_idle,
        ap_ready => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready,
        start_out => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_out,
        start_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        rows => rows,
        cols => cols,
        imgInput_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_din,
        imgInput_rows_out_full_n => imgInput_rows_c_full_n,
        imgInput_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_write,
        imgInput_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_din,
        imgInput_cols_out_full_n => imgInput_cols_c_full_n,
        imgInput_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_write,
        rgb2hsv_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_din,
        rgb2hsv_rows_out_full_n => rgb2hsv_rows_c_full_n,
        rgb2hsv_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_write,
        rgb2hsv_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_din,
        rgb2hsv_cols_out_full_n => rgb2hsv_cols_c_full_n,
        rgb2hsv_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_write,
        imgHelper1_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_din,
        imgHelper1_rows_out_full_n => imgHelper1_rows_c_full_n,
        imgHelper1_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_write,
        imgHelper1_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_din,
        imgHelper1_cols_out_full_n => imgHelper1_cols_c_full_n,
        imgHelper1_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_write,
        imgHelper2_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_din,
        imgHelper2_rows_out_full_n => imgHelper2_rows_c_full_n,
        imgHelper2_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_write,
        imgHelper2_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_din,
        imgHelper2_cols_out_full_n => imgHelper2_cols_c_full_n,
        imgHelper2_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_write,
        imgHelper3_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_din,
        imgHelper3_rows_out_full_n => imgHelper3_rows_c_full_n,
        imgHelper3_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_write,
        imgHelper3_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_din,
        imgHelper3_cols_out_full_n => imgHelper3_cols_c_full_n,
        imgHelper3_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_write,
        imgHelper4_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_din,
        imgHelper4_rows_out_full_n => imgHelper4_rows_c_full_n,
        imgHelper4_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_write,
        imgHelper4_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_din,
        imgHelper4_cols_out_full_n => imgHelper4_cols_c_full_n,
        imgHelper4_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_write,
        imgOutput_rows_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_din,
        imgOutput_rows_out_full_n => imgOutput_rows_c_full_n,
        imgOutput_rows_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_write,
        imgOutput_cols_out_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_din,
        imgOutput_cols_out_full_n => imgOutput_cols_c_full_n,
        imgOutput_cols_out_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_write);

    axis2xfMat_24_9_2160_3840_1_U0 : component colordetect_accel_axis2xfMat_24_9_2160_3840_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => axis2xfMat_24_9_2160_3840_1_U0_ap_start,
        start_full_n => start_for_bgr2hsv_9_2160_3840_1_U0_full_n,
        ap_done => axis2xfMat_24_9_2160_3840_1_U0_ap_done,
        ap_continue => axis2xfMat_24_9_2160_3840_1_U0_ap_continue,
        ap_idle => axis2xfMat_24_9_2160_3840_1_U0_ap_idle,
        ap_ready => axis2xfMat_24_9_2160_3840_1_U0_ap_ready,
        start_out => axis2xfMat_24_9_2160_3840_1_U0_start_out,
        start_write => axis2xfMat_24_9_2160_3840_1_U0_start_write,
        imgInput_499_din => axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_din,
        imgInput_499_full_n => imgInput_data_full_n,
        imgInput_499_write => axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_write,
        src_TDATA => src_TDATA,
        src_TVALID => src_TVALID,
        src_TREADY => axis2xfMat_24_9_2160_3840_1_U0_src_TREADY,
        src_TKEEP => src_TKEEP,
        src_TSTRB => src_TSTRB,
        src_TUSER => src_TUSER,
        src_TLAST => src_TLAST,
        src_TID => src_TID,
        src_TDEST => src_TDEST,
        img_rows_dout => imgInput_rows_c_dout,
        img_rows_empty_n => imgInput_rows_c_empty_n,
        img_rows_read => axis2xfMat_24_9_2160_3840_1_U0_img_rows_read,
        img_cols_dout => imgInput_cols_c_dout,
        img_cols_empty_n => imgInput_cols_c_empty_n,
        img_cols_read => axis2xfMat_24_9_2160_3840_1_U0_img_cols_read,
        img_rows_out_din => axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_din,
        img_rows_out_full_n => imgInput_rows_c19_full_n,
        img_rows_out_write => axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_write,
        img_cols_out_din => axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_din,
        img_cols_out_full_n => imgInput_cols_c20_full_n,
        img_cols_out_write => axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_write);

    bgr2hsv_9_2160_3840_1_U0 : component colordetect_accel_bgr2hsv_9_2160_3840_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => bgr2hsv_9_2160_3840_1_U0_ap_start,
        ap_done => bgr2hsv_9_2160_3840_1_U0_ap_done,
        ap_continue => bgr2hsv_9_2160_3840_1_U0_ap_continue,
        ap_idle => bgr2hsv_9_2160_3840_1_U0_ap_idle,
        ap_ready => bgr2hsv_9_2160_3840_1_U0_ap_ready,
        imgInput_499_dout => imgInput_data_dout,
        imgInput_499_empty_n => imgInput_data_empty_n,
        imgInput_499_read => bgr2hsv_9_2160_3840_1_U0_imgInput_499_read,
        rgb2hsv_4100_din => bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_din,
        rgb2hsv_4100_full_n => rgb2hsv_data_full_n,
        rgb2hsv_4100_write => bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_write,
        p_src_mat_rows_dout => imgInput_rows_c19_dout,
        p_src_mat_rows_empty_n => imgInput_rows_c19_empty_n,
        p_src_mat_rows_read => bgr2hsv_9_2160_3840_1_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => imgInput_cols_c20_dout,
        p_src_mat_cols_empty_n => imgInput_cols_c20_empty_n,
        p_src_mat_cols_read => bgr2hsv_9_2160_3840_1_U0_p_src_mat_cols_read);

    colorthresholding_9_0_3_2160_3840_1_U0 : component colordetect_accel_colorthresholding_9_0_3_2160_3840_1_s
    port map (
        rgb2hsv_4100_dout => rgb2hsv_data_dout,
        rgb2hsv_4100_empty_n => rgb2hsv_data_empty_n,
        rgb2hsv_4100_read => colorthresholding_9_0_3_2160_3840_1_U0_rgb2hsv_4100_read,
        imgHelper1_4101_din => colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_din,
        imgHelper1_4101_full_n => imgHelper1_data_full_n,
        imgHelper1_4101_write => colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_write,
        low_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_address0,
        low_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_ce0,
        low_thresh_d0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_d0,
        low_thresh_q0 => low_thresh_q0,
        low_thresh_we0 => colorthresholding_9_0_3_2160_3840_1_U0_low_thresh_we0,
        high_thresh_address0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_address0,
        high_thresh_ce0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_ce0,
        high_thresh_d0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_d0,
        high_thresh_q0 => high_thresh_q0,
        high_thresh_we0 => colorthresholding_9_0_3_2160_3840_1_U0_high_thresh_we0,
        p_src_mat_rows_dout => rgb2hsv_rows_c_dout,
        p_src_mat_rows_empty_n => rgb2hsv_rows_c_empty_n,
        p_src_mat_rows_read => colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_rows_read,
        p_src_mat_cols_dout => rgb2hsv_cols_c_dout,
        p_src_mat_cols_empty_n => rgb2hsv_cols_c_empty_n,
        p_src_mat_cols_read => colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_cols_read,
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => colorthresholding_9_0_3_2160_3840_1_U0_ap_start,
        ap_done => colorthresholding_9_0_3_2160_3840_1_U0_ap_done,
        ap_ready => colorthresholding_9_0_3_2160_3840_1_U0_ap_ready,
        ap_idle => colorthresholding_9_0_3_2160_3840_1_U0_ap_idle,
        ap_continue => colorthresholding_9_0_3_2160_3840_1_U0_ap_continue);

    erode_0_0_2160_3840_0_3_3_1_1_11_U0 : component colordetect_accel_erode_0_0_2160_3840_0_3_3_1_1_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_start,
        ap_done => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_done,
        ap_continue => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_continue,
        ap_idle => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_idle,
        ap_ready => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_ready,
        imgHelper1_4101_dout => imgHelper1_data_dout,
        imgHelper1_4101_empty_n => imgHelper1_data_empty_n,
        imgHelper1_4101_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper1_4101_read,
        imgHelper2_4102_din => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_din,
        imgHelper2_4102_full_n => imgHelper2_data_full_n,
        imgHelper2_4102_write => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_write,
        p_src_rows_dout => imgHelper1_rows_c_dout,
        p_src_rows_empty_n => imgHelper1_rows_c_empty_n,
        p_src_rows_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_rows_read,
        p_src_cols_dout => imgHelper1_cols_c_dout,
        p_src_cols_empty_n => imgHelper1_cols_c_empty_n,
        p_src_cols_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_cols_read);

    dilate_0_0_2160_3840_0_3_3_1_1_12_U0 : component colordetect_accel_dilate_0_0_2160_3840_0_3_3_1_1_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_start,
        ap_done => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_done,
        ap_continue => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_continue,
        ap_idle => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_idle,
        ap_ready => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_ready,
        imgHelper2_4102_dout => imgHelper2_data_dout,
        imgHelper2_4102_empty_n => imgHelper2_data_empty_n,
        imgHelper2_4102_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper2_4102_read,
        imgHelper3_4103_din => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_din,
        imgHelper3_4103_full_n => imgHelper3_data_full_n,
        imgHelper3_4103_write => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_write,
        p_src_rows_dout => imgHelper2_rows_c_dout,
        p_src_rows_empty_n => imgHelper2_rows_c_empty_n,
        p_src_rows_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_rows_read,
        p_src_cols_dout => imgHelper2_cols_c_dout,
        p_src_cols_empty_n => imgHelper2_cols_c_empty_n,
        p_src_cols_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_cols_read);

    dilate_0_0_2160_3840_0_3_3_1_1_U0 : component colordetect_accel_dilate_0_0_2160_3840_0_3_3_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_start,
        ap_done => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_done,
        ap_continue => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_continue,
        ap_idle => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_idle,
        ap_ready => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_ready,
        imgHelper2_4102_dout => imgHelper3_data_dout,
        imgHelper2_4102_empty_n => imgHelper3_data_empty_n,
        imgHelper2_4102_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_read,
        imgHelper3_4103_din => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_din,
        imgHelper3_4103_full_n => imgHelper4_data_full_n,
        imgHelper3_4103_write => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_write,
        p_src_rows_dout => imgHelper3_rows_c_dout,
        p_src_rows_empty_n => imgHelper3_rows_c_empty_n,
        p_src_rows_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read,
        p_src_cols_dout => imgHelper3_cols_c_dout,
        p_src_cols_empty_n => imgHelper3_cols_c_empty_n,
        p_src_cols_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read);

    erode_0_0_2160_3840_0_3_3_1_1_U0 : component colordetect_accel_erode_0_0_2160_3840_0_3_3_1_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_start,
        ap_done => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_done,
        ap_continue => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_continue,
        ap_idle => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_idle,
        ap_ready => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_ready,
        imgHelper1_4101_dout => imgHelper4_data_dout,
        imgHelper1_4101_empty_n => imgHelper4_data_empty_n,
        imgHelper1_4101_read => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper1_4101_read,
        imgHelper2_4102_din => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_din,
        imgHelper2_4102_full_n => imgOutput_data_full_n,
        imgHelper2_4102_write => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_write,
        p_src_rows_dout => imgHelper4_rows_c_dout,
        p_src_rows_empty_n => imgHelper4_rows_c_empty_n,
        p_src_rows_read => erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read,
        p_src_cols_dout => imgHelper4_cols_c_dout,
        p_src_cols_empty_n => imgHelper4_cols_c_empty_n,
        p_src_cols_read => erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read);

    xfMat2axis_24_0_2160_3840_1_U0 : component colordetect_accel_xfMat2axis_24_0_2160_3840_1_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2axis_24_0_2160_3840_1_U0_ap_start,
        ap_done => xfMat2axis_24_0_2160_3840_1_U0_ap_done,
        ap_continue => xfMat2axis_24_0_2160_3840_1_U0_ap_continue,
        ap_idle => xfMat2axis_24_0_2160_3840_1_U0_ap_idle,
        ap_ready => xfMat2axis_24_0_2160_3840_1_U0_ap_ready,
        imgOutput_4105_dout => imgOutput_data_dout,
        imgOutput_4105_empty_n => imgOutput_data_empty_n,
        imgOutput_4105_read => xfMat2axis_24_0_2160_3840_1_U0_imgOutput_4105_read,
        img_rows_dout => imgOutput_rows_c_dout,
        img_rows_empty_n => imgOutput_rows_c_empty_n,
        img_rows_read => xfMat2axis_24_0_2160_3840_1_U0_img_rows_read,
        img_cols_dout => imgOutput_cols_c_dout,
        img_cols_empty_n => imgOutput_cols_c_empty_n,
        img_cols_read => xfMat2axis_24_0_2160_3840_1_U0_img_cols_read,
        dst_TDATA => xfMat2axis_24_0_2160_3840_1_U0_dst_TDATA,
        dst_TVALID => xfMat2axis_24_0_2160_3840_1_U0_dst_TVALID,
        dst_TREADY => dst_TREADY,
        dst_TKEEP => xfMat2axis_24_0_2160_3840_1_U0_dst_TKEEP,
        dst_TSTRB => xfMat2axis_24_0_2160_3840_1_U0_dst_TSTRB,
        dst_TUSER => xfMat2axis_24_0_2160_3840_1_U0_dst_TUSER,
        dst_TLAST => xfMat2axis_24_0_2160_3840_1_U0_dst_TLAST,
        dst_TID => xfMat2axis_24_0_2160_3840_1_U0_dst_TID,
        dst_TDEST => xfMat2axis_24_0_2160_3840_1_U0_dst_TDEST);

    imgInput_rows_c_U : component colordetect_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_din,
        if_full_n => imgInput_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_rows_out_write,
        if_dout => imgInput_rows_c_dout,
        if_empty_n => imgInput_rows_c_empty_n,
        if_read => axis2xfMat_24_9_2160_3840_1_U0_img_rows_read);

    imgInput_cols_c_U : component colordetect_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_din,
        if_full_n => imgInput_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgInput_cols_out_write,
        if_dout => imgInput_cols_c_dout,
        if_empty_n => imgInput_cols_c_empty_n,
        if_read => axis2xfMat_24_9_2160_3840_1_U0_img_cols_read);

    rgb2hsv_rows_c_U : component colordetect_accel_fifo_w32_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_din,
        if_full_n => rgb2hsv_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_rows_out_write,
        if_dout => rgb2hsv_rows_c_dout,
        if_empty_n => rgb2hsv_rows_c_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_rows_read);

    rgb2hsv_cols_c_U : component colordetect_accel_fifo_w32_d4_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_din,
        if_full_n => rgb2hsv_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_rgb2hsv_cols_out_write,
        if_dout => rgb2hsv_cols_c_dout,
        if_empty_n => rgb2hsv_cols_c_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_U0_p_src_mat_cols_read);

    imgHelper1_rows_c_U : component colordetect_accel_fifo_w32_d5_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_din,
        if_full_n => imgHelper1_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_rows_out_write,
        if_dout => imgHelper1_rows_c_dout,
        if_empty_n => imgHelper1_rows_c_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_rows_read);

    imgHelper1_cols_c_U : component colordetect_accel_fifo_w32_d5_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_din,
        if_full_n => imgHelper1_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper1_cols_out_write,
        if_dout => imgHelper1_cols_c_dout,
        if_empty_n => imgHelper1_cols_c_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_p_src_cols_read);

    imgHelper2_rows_c_U : component colordetect_accel_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_din,
        if_full_n => imgHelper2_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_rows_out_write,
        if_dout => imgHelper2_rows_c_dout,
        if_empty_n => imgHelper2_rows_c_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_rows_read);

    imgHelper2_cols_c_U : component colordetect_accel_fifo_w32_d6_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_din,
        if_full_n => imgHelper2_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper2_cols_out_write,
        if_dout => imgHelper2_cols_c_dout,
        if_empty_n => imgHelper2_cols_c_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_p_src_cols_read);

    imgHelper3_rows_c_U : component colordetect_accel_fifo_w32_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_din,
        if_full_n => imgHelper3_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_rows_out_write,
        if_dout => imgHelper3_rows_c_dout,
        if_empty_n => imgHelper3_rows_c_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read);

    imgHelper3_cols_c_U : component colordetect_accel_fifo_w32_d7_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_din,
        if_full_n => imgHelper3_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper3_cols_out_write,
        if_dout => imgHelper3_cols_c_dout,
        if_empty_n => imgHelper3_cols_c_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read);

    imgHelper4_rows_c_U : component colordetect_accel_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_din,
        if_full_n => imgHelper4_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_rows_out_write,
        if_dout => imgHelper4_rows_c_dout,
        if_empty_n => imgHelper4_rows_c_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_rows_read);

    imgHelper4_cols_c_U : component colordetect_accel_fifo_w32_d8_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_din,
        if_full_n => imgHelper4_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgHelper4_cols_out_write,
        if_dout => imgHelper4_cols_c_dout,
        if_empty_n => imgHelper4_cols_c_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_U0_p_src_cols_read);

    imgOutput_rows_c_U : component colordetect_accel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_din,
        if_full_n => imgOutput_rows_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_rows_out_write,
        if_dout => imgOutput_rows_c_dout,
        if_empty_n => imgOutput_rows_c_empty_n,
        if_read => xfMat2axis_24_0_2160_3840_1_U0_img_rows_read);

    imgOutput_cols_c_U : component colordetect_accel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_din,
        if_full_n => imgOutput_cols_c_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_imgOutput_cols_out_write,
        if_dout => imgOutput_cols_c_dout,
        if_empty_n => imgOutput_cols_c_empty_n,
        if_read => xfMat2axis_24_0_2160_3840_1_U0_img_cols_read);

    imgInput_data_U : component colordetect_accel_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_din,
        if_full_n => imgInput_data_full_n,
        if_write => axis2xfMat_24_9_2160_3840_1_U0_imgInput_499_write,
        if_dout => imgInput_data_dout,
        if_empty_n => imgInput_data_empty_n,
        if_read => bgr2hsv_9_2160_3840_1_U0_imgInput_499_read);

    imgInput_rows_c19_U : component colordetect_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_din,
        if_full_n => imgInput_rows_c19_full_n,
        if_write => axis2xfMat_24_9_2160_3840_1_U0_img_rows_out_write,
        if_dout => imgInput_rows_c19_dout,
        if_empty_n => imgInput_rows_c19_empty_n,
        if_read => bgr2hsv_9_2160_3840_1_U0_p_src_mat_rows_read);

    imgInput_cols_c20_U : component colordetect_accel_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_din,
        if_full_n => imgInput_cols_c20_full_n,
        if_write => axis2xfMat_24_9_2160_3840_1_U0_img_cols_out_write,
        if_dout => imgInput_cols_c20_dout,
        if_empty_n => imgInput_cols_c20_empty_n,
        if_read => bgr2hsv_9_2160_3840_1_U0_p_src_mat_cols_read);

    rgb2hsv_data_U : component colordetect_accel_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_din,
        if_full_n => rgb2hsv_data_full_n,
        if_write => bgr2hsv_9_2160_3840_1_U0_rgb2hsv_4100_write,
        if_dout => rgb2hsv_data_dout,
        if_empty_n => rgb2hsv_data_empty_n,
        if_read => colorthresholding_9_0_3_2160_3840_1_U0_rgb2hsv_4100_read);

    imgHelper1_data_U : component colordetect_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_din,
        if_full_n => imgHelper1_data_full_n,
        if_write => colorthresholding_9_0_3_2160_3840_1_U0_imgHelper1_4101_write,
        if_dout => imgHelper1_data_dout,
        if_empty_n => imgHelper1_data_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper1_4101_read);

    imgHelper2_data_U : component colordetect_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_din,
        if_full_n => imgHelper2_data_full_n,
        if_write => erode_0_0_2160_3840_0_3_3_1_1_11_U0_imgHelper2_4102_write,
        if_dout => imgHelper2_data_dout,
        if_empty_n => imgHelper2_data_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper2_4102_read);

    imgHelper3_data_U : component colordetect_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_din,
        if_full_n => imgHelper3_data_full_n,
        if_write => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_imgHelper3_4103_write,
        if_dout => imgHelper3_data_dout,
        if_empty_n => imgHelper3_data_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_read);

    imgHelper4_data_U : component colordetect_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_din,
        if_full_n => imgHelper4_data_full_n,
        if_write => dilate_0_0_2160_3840_0_3_3_1_1_U0_imgHelper3_4103_write,
        if_dout => imgHelper4_data_dout,
        if_empty_n => imgHelper4_data_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper1_4101_read);

    imgOutput_data_U : component colordetect_accel_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_din,
        if_full_n => imgOutput_data_full_n,
        if_write => erode_0_0_2160_3840_0_3_3_1_1_U0_imgHelper2_4102_write,
        if_dout => imgOutput_data_dout,
        if_empty_n => imgOutput_data_empty_n,
        if_read => xfMat2axis_24_0_2160_3840_1_U0_imgOutput_4105_read);

    start_for_axis2xfMat_24_9_2160_3840_1_U0_U : component colordetect_accel_start_for_axis2xfMat_24_9_2160_3840_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_axis2xfMat_24_9_2160_3840_1_U0_din,
        if_full_n => start_for_axis2xfMat_24_9_2160_3840_1_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_axis2xfMat_24_9_2160_3840_1_U0_dout,
        if_empty_n => start_for_axis2xfMat_24_9_2160_3840_1_U0_empty_n,
        if_read => axis2xfMat_24_9_2160_3840_1_U0_ap_ready);

    start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_U : component colordetect_accel_start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_din,
        if_full_n => start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_dout,
        if_empty_n => start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_ready);

    start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_U : component colordetect_accel_start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_din,
        if_full_n => start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_dout,
        if_empty_n => start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_ready);

    start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_U : component colordetect_accel_start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_din,
        if_full_n => start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_dout,
        if_empty_n => start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_empty_n,
        if_read => dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_ready);

    start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_U : component colordetect_accel_start_for_erode_0_0_2160_3840_0_3_3_1_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_din,
        if_full_n => start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_dout,
        if_empty_n => start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_empty_n,
        if_read => erode_0_0_2160_3840_0_3_3_1_1_U0_ap_ready);

    start_for_xfMat2axis_24_0_2160_3840_1_U0_U : component colordetect_accel_start_for_xfMat2axis_24_0_2160_3840_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2axis_24_0_2160_3840_1_U0_din,
        if_full_n => start_for_xfMat2axis_24_0_2160_3840_1_U0_full_n,
        if_write => Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_write,
        if_dout => start_for_xfMat2axis_24_0_2160_3840_1_U0_dout,
        if_empty_n => start_for_xfMat2axis_24_0_2160_3840_1_U0_empty_n,
        if_read => xfMat2axis_24_0_2160_3840_1_U0_ap_ready);

    start_for_bgr2hsv_9_2160_3840_1_U0_U : component colordetect_accel_start_for_bgr2hsv_9_2160_3840_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_bgr2hsv_9_2160_3840_1_U0_din,
        if_full_n => start_for_bgr2hsv_9_2160_3840_1_U0_full_n,
        if_write => axis2xfMat_24_9_2160_3840_1_U0_start_write,
        if_dout => start_for_bgr2hsv_9_2160_3840_1_U0_dout,
        if_empty_n => start_for_bgr2hsv_9_2160_3840_1_U0_empty_n,
        if_read => bgr2hsv_9_2160_3840_1_U0_ap_ready);





    ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready <= ap_sync_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready <= ap_sync_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_continue <= ap_const_logic_1;
    Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_start <= ((ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_start_full_n <= (start_for_xfMat2axis_24_0_2160_3840_1_U0_full_n and start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_full_n and start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_full_n and start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_full_n and start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_full_n and start_for_axis2xfMat_24_9_2160_3840_1_U0_full_n);
    ap_done <= xfMat2axis_24_0_2160_3840_1_U0_ap_done;
    ap_idle <= (xfMat2axis_24_0_2160_3840_1_U0_ap_idle and erode_0_0_2160_3840_0_3_3_1_1_U0_ap_idle and erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_idle and dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_idle and dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_idle and colorthresholding_9_0_3_2160_3840_1_U0_ap_idle and bgr2hsv_9_2160_3840_1_U0_ap_idle and axis2xfMat_24_9_2160_3840_1_U0_ap_idle and Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready <= (ap_sync_reg_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready or Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready);
    ap_sync_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready <= (colorthresholding_9_0_3_2160_3840_1_U0_ap_ready or ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= xfMat2axis_24_0_2160_3840_1_U0_ap_done;
    ap_sync_ready <= (ap_sync_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready and ap_sync_Block_ZN2xf2cv3MatILi9ELi2160ELi3840ELi1ELi2EEC2Eii_exit1_proc_U0_ap_ready);
    axis2xfMat_24_9_2160_3840_1_U0_ap_continue <= ap_const_logic_1;
    axis2xfMat_24_9_2160_3840_1_U0_ap_start <= start_for_axis2xfMat_24_9_2160_3840_1_U0_empty_n;
    bgr2hsv_9_2160_3840_1_U0_ap_continue <= ap_const_logic_1;
    bgr2hsv_9_2160_3840_1_U0_ap_start <= start_for_bgr2hsv_9_2160_3840_1_U0_empty_n;
    bgr2hsv_9_2160_3840_1_U0_start_full_n <= ap_const_logic_1;
    bgr2hsv_9_2160_3840_1_U0_start_write <= ap_const_logic_0;
    colorthresholding_9_0_3_2160_3840_1_U0_ap_continue <= ap_const_logic_1;
    colorthresholding_9_0_3_2160_3840_1_U0_ap_start <= ((ap_sync_reg_colorthresholding_9_0_3_2160_3840_1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    colorthresholding_9_0_3_2160_3840_1_U0_start_full_n <= ap_const_logic_1;
    colorthresholding_9_0_3_2160_3840_1_U0_start_write <= ap_const_logic_0;
    dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_continue <= ap_const_logic_1;
    dilate_0_0_2160_3840_0_3_3_1_1_12_U0_ap_start <= start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_empty_n;
    dilate_0_0_2160_3840_0_3_3_1_1_12_U0_start_full_n <= ap_const_logic_1;
    dilate_0_0_2160_3840_0_3_3_1_1_12_U0_start_write <= ap_const_logic_0;
    dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_continue <= ap_const_logic_1;
    dilate_0_0_2160_3840_0_3_3_1_1_U0_ap_start <= start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_empty_n;
    dilate_0_0_2160_3840_0_3_3_1_1_U0_start_full_n <= ap_const_logic_1;
    dilate_0_0_2160_3840_0_3_3_1_1_U0_start_write <= ap_const_logic_0;
    dst_TDATA <= xfMat2axis_24_0_2160_3840_1_U0_dst_TDATA;
    dst_TDEST <= xfMat2axis_24_0_2160_3840_1_U0_dst_TDEST;
    dst_TID <= xfMat2axis_24_0_2160_3840_1_U0_dst_TID;
    dst_TKEEP <= xfMat2axis_24_0_2160_3840_1_U0_dst_TKEEP;
    dst_TLAST <= xfMat2axis_24_0_2160_3840_1_U0_dst_TLAST;
    dst_TSTRB <= xfMat2axis_24_0_2160_3840_1_U0_dst_TSTRB;
    dst_TUSER <= xfMat2axis_24_0_2160_3840_1_U0_dst_TUSER;
    dst_TVALID <= xfMat2axis_24_0_2160_3840_1_U0_dst_TVALID;
    erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_continue <= ap_const_logic_1;
    erode_0_0_2160_3840_0_3_3_1_1_11_U0_ap_start <= start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_empty_n;
    erode_0_0_2160_3840_0_3_3_1_1_11_U0_start_full_n <= ap_const_logic_1;
    erode_0_0_2160_3840_0_3_3_1_1_11_U0_start_write <= ap_const_logic_0;
    erode_0_0_2160_3840_0_3_3_1_1_U0_ap_continue <= ap_const_logic_1;
    erode_0_0_2160_3840_0_3_3_1_1_U0_ap_start <= start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_empty_n;
    erode_0_0_2160_3840_0_3_3_1_1_U0_start_full_n <= ap_const_logic_1;
    erode_0_0_2160_3840_0_3_3_1_1_U0_start_write <= ap_const_logic_0;
    src_TREADY <= axis2xfMat_24_9_2160_3840_1_U0_src_TREADY;
    start_for_axis2xfMat_24_9_2160_3840_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_bgr2hsv_9_2160_3840_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dilate_0_0_2160_3840_0_3_3_1_1_12_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_dilate_0_0_2160_3840_0_3_3_1_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_erode_0_0_2160_3840_0_3_3_1_1_11_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_erode_0_0_2160_3840_0_3_3_1_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2axis_24_0_2160_3840_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xfMat2axis_24_0_2160_3840_1_U0_ap_continue <= ap_const_logic_1;
    xfMat2axis_24_0_2160_3840_1_U0_ap_start <= start_for_xfMat2axis_24_0_2160_3840_1_U0_empty_n;
    xfMat2axis_24_0_2160_3840_1_U0_start_full_n <= ap_const_logic_1;
    xfMat2axis_24_0_2160_3840_1_U0_start_write <= ap_const_logic_0;
end behav;
