// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module colordetect_accel_xferode_2160_3840_1_0_1_0_3841_3_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgHelper1_4101_dout,
        imgHelper1_4101_empty_n,
        imgHelper1_4101_read,
        imgHelper2_4102_din,
        imgHelper2_4102_full_n,
        imgHelper2_4102_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_pp1_stage0 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_pp3_stage0 = 10'd256;
parameter    ap_ST_fsm_state16 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] imgHelper1_4101_dout;
input   imgHelper1_4101_empty_n;
output   imgHelper1_4101_read;
output  [7:0] imgHelper2_4102_din;
input   imgHelper2_4102_full_n;
output   imgHelper2_4102_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg imgHelper1_4101_read;
reg imgHelper2_4102_write;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    imgHelper1_4101_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln878_reg_873;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln878_4_reg_926;
reg   [0:0] icmp_ln878_5_reg_930;
reg   [0:0] cmp_i_i127_i_reg_903;
reg    imgHelper2_4102_blk_n;
reg    ap_enable_reg_pp3_iter5;
reg   [0:0] icmp_ln882_reg_954;
reg   [0:0] icmp_ln882_reg_954_pp3_iter4_reg;
reg   [12:0] i_col_046_0_reg_262;
reg   [12:0] col_V_reg_330;
reg   [12:0] col_V_reg_330_pp3_iter1_reg;
wire    ap_block_state10_pp3_stage0_iter0;
reg    ap_predicate_op126_read_state11;
reg    ap_block_state11_pp3_stage0_iter1;
wire    ap_block_state12_pp3_stage0_iter2;
wire    ap_block_state13_pp3_stage0_iter3;
wire    ap_block_state14_pp3_stage0_iter4;
reg    ap_block_state15_pp3_stage0_iter5;
reg    ap_block_pp3_stage0_11001;
reg   [7:0] src_buf_V_0_0_reg_342;
reg   [7:0] p_Val2_s_reg_354;
reg   [7:0] p_Val2_2_reg_389;
reg   [7:0] src_buf_V_1_0_reg_400;
reg   [7:0] p_Val2_1_reg_412;
reg   [7:0] src_buf_V_2_0_reg_424;
wire   [13:0] empty_fu_478_p1;
reg   [13:0] empty_reg_840;
wire   [1:0] init_row_ind_fu_482_p2;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_0_0_load_reg_850;
reg   [12:0] row_ind_V_1_0_load_reg_855;
reg   [12:0] row_ind_V_2_0_load_reg_860;
wire   [12:0] add_ln691_fu_522_p2;
reg   [12:0] add_ln691_reg_868;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state4_pp1_stage0_iter0;
reg    ap_block_state5_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln878_fu_532_p2;
wire   [12:0] add_ln691_1_fu_542_p2;
wire    ap_CS_fsm_state7;
wire   [16:0] op2_assign_fu_565_p2;
reg   [16:0] op2_assign_reg_885;
wire    ap_CS_fsm_state8;
wire   [13:0] add_ln1616_fu_571_p2;
reg   [13:0] add_ln1616_reg_890;
wire   [0:0] icmp_ln878_2_fu_586_p2;
reg   [0:0] icmp_ln878_2_reg_895;
wire   [0:0] icmp_ln878_3_fu_600_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] cmp_i_i127_i_fu_605_p2;
wire   [1:0] trunc_ln124_fu_610_p1;
reg   [1:0] trunc_ln124_reg_907;
wire   [1:0] trunc_ln138_fu_614_p1;
reg   [1:0] trunc_ln138_reg_911;
wire   [1:0] trunc_ln138_1_fu_618_p1;
reg   [1:0] trunc_ln138_1_reg_916;
wire   [12:0] col_V_1_fu_622_p2;
reg   [12:0] col_V_1_reg_921;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln878_4_fu_636_p2;
reg   [0:0] icmp_ln878_4_reg_926_pp3_iter1_reg;
reg   [0:0] icmp_ln878_4_reg_926_pp3_iter2_reg;
reg   [0:0] icmp_ln878_4_reg_926_pp3_iter3_reg;
reg   [0:0] icmp_ln878_4_reg_926_pp3_iter4_reg;
wire   [0:0] icmp_ln878_5_fu_641_p2;
reg   [0:0] icmp_ln878_5_reg_930_pp3_iter1_reg;
reg   [0:0] icmp_ln878_5_reg_930_pp3_iter2_reg;
wire   [0:0] icmp_ln882_fu_667_p2;
reg   [0:0] icmp_ln882_reg_954_pp3_iter3_reg;
wire   [7:0] tmp_fu_685_p5;
wire   [7:0] src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_return;
reg   [7:0] src_buf_V_0_1_reg_963;
reg    ap_enable_reg_pp3_iter3;
wire   [7:0] max_V_3_fu_716_p3;
reg   [7:0] max_V_3_reg_968;
wire   [7:0] src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_return;
reg   [7:0] src_buf_V_1_1_reg_974;
reg    ap_enable_reg_pp3_iter4;
wire   [7:0] src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472_ap_return;
reg   [7:0] src_buf_V_2_1_reg_979;
wire   [7:0] max_V_7_fu_770_p3;
reg   [7:0] max_V_7_reg_986;
wire   [12:0] row_V_1_fu_803_p2;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter2;
reg    ap_condition_pp3_exit_iter4_state14;
wire   [11:0] buf_V_0_address0;
reg    buf_V_0_ce0;
wire   [7:0] buf_V_0_q0;
reg   [11:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [7:0] buf_V_0_d1;
wire   [11:0] buf_V_1_address0;
reg    buf_V_1_ce0;
wire   [7:0] buf_V_1_q0;
reg   [11:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [7:0] buf_V_1_d1;
wire   [11:0] buf_V_2_address0;
reg    buf_V_2_ce0;
wire   [7:0] buf_V_2_q0;
reg   [11:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg   [7:0] buf_V_2_d1;
wire    src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_ready;
wire    src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_ready;
wire    src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472_ap_ready;
wire   [1:0] ap_phi_mux_row_ind_V_1_phi_fu_255_p4;
reg   [1:0] row_ind_V_1_reg_251;
wire   [0:0] icmp_ln263_fu_497_p2;
reg   [12:0] ap_phi_mux_i_col_046_0_phi_fu_266_p4;
reg   [12:0] i_col_V_0_reg_274;
wire   [0:0] icmp_ln878_1_fu_552_p2;
wire    ap_CS_fsm_state6;
reg   [12:0] row_ind_V_0_reg_306;
reg   [12:0] row_ind_V_2_reg_285;
reg   [12:0] row_ind_V_1_1_reg_295;
reg   [12:0] row_V_reg_318;
reg   [12:0] ap_phi_mux_col_V_phi_fu_334_p4;
reg   [7:0] ap_phi_mux_src_buf_V_0_0_phi_fu_346_p4;
reg   [7:0] ap_phi_mux_p_Val2_s_phi_fu_358_p4;
wire   [7:0] ap_phi_reg_pp3_iter0_arrayidx486_i181254_load_0_2_reg_366;
reg   [7:0] ap_phi_reg_pp3_iter1_arrayidx486_i181254_load_0_2_reg_366;
reg   [7:0] ap_phi_reg_pp3_iter2_arrayidx486_i181254_load_0_2_reg_366;
reg   [7:0] ap_phi_reg_pp3_iter3_arrayidx486_i181254_load_0_2_reg_366;
reg   [7:0] ap_phi_mux_buf_cop_V_0_0_phi_fu_382_p4;
wire   [7:0] buf_cop_V_0_fu_673_p5;
reg   [7:0] ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_378;
wire   [7:0] ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_378;
reg   [7:0] ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_378;
reg   [7:0] ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_378;
reg   [7:0] ap_phi_mux_p_Val2_2_phi_fu_393_p4;
reg   [7:0] ap_phi_mux_src_buf_V_1_0_phi_fu_404_p4;
reg   [7:0] ap_phi_mux_p_Val2_1_phi_fu_416_p4;
wire   [7:0] ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_437;
reg   [7:0] ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_437;
reg   [7:0] ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_437;
reg   [7:0] ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_437;
reg   [7:0] ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_437;
wire   [7:0] ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_448;
reg   [7:0] ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_448;
reg   [7:0] ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_448;
reg   [7:0] ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_448;
reg   [7:0] ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_448;
wire   [63:0] zext_ln534_fu_537_p1;
wire   [63:0] zext_ln534_1_fu_557_p1;
wire   [63:0] zext_ln534_3_fu_646_p1;
wire   [63:0] zext_ln534_2_fu_653_p1;
wire   [63:0] zext_ln1616_fu_660_p1;
reg   [12:0] row_ind_V_0_0_fu_92;
wire   [12:0] zext_ln301_fu_503_p1;
reg   [12:0] row_ind_V_1_0_fu_96;
reg   [12:0] row_ind_V_2_0_fu_100;
reg    ap_block_pp3_stage0_01001;
wire   [15:0] zext_ln878_fu_528_p1;
wire   [15:0] zext_ln878_1_fu_548_p1;
wire   [16:0] img_height_cast_fu_562_p1;
wire   [15:0] tmp_1_fu_576_p4;
wire   [16:0] zext_ln878_3_fu_596_p1;
wire   [15:0] zext_ln878_2_fu_592_p1;
wire   [13:0] zext_ln878_5_fu_632_p1;
wire   [15:0] zext_ln878_4_fu_628_p1;
wire   [0:0] icmp_ln878_6_fu_696_p2;
wire   [7:0] max_V_2_fu_702_p3;
wire   [0:0] icmp_ln878_7_fu_710_p2;
wire   [0:0] icmp_ln878_8_fu_724_p2;
wire   [7:0] max_V_4_fu_729_p3;
wire   [0:0] icmp_ln878_9_fu_736_p2;
wire   [7:0] max_V_5_fu_742_p3;
wire   [0:0] icmp_ln878_10_fu_750_p2;
wire   [7:0] max_V_6_fu_756_p3;
wire   [0:0] icmp_ln878_11_fu_764_p2;
wire   [0:0] icmp_ln878_12_fu_778_p2;
wire   [7:0] max_V_8_fu_783_p3;
wire   [0:0] icmp_ln878_13_fu_790_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_414;
reg    ap_condition_209;
reg    ap_condition_77;
reg    ap_condition_226;
reg    ap_condition_775;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

colordetect_accel_xferode_2160_3840_1_0_1_0_3841_3_3_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

colordetect_accel_xferode_2160_3840_1_0_1_0_3841_3_3_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

colordetect_accel_xferode_2160_3840_1_0_1_0_3841_3_3_s_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

colordetect_accel_xfExtractPixels_1_1_0_s src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460(
    .ap_ready(src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_ready),
    .p_read1(ap_phi_mux_buf_cop_V_0_0_phi_fu_382_p4),
    .ap_return(src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_return)
);

colordetect_accel_xfExtractPixels_1_1_0_s src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466(
    .ap_ready(src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_ready),
    .p_read1(ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_437),
    .ap_return(src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_return)
);

colordetect_accel_xfExtractPixels_1_1_0_s src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472(
    .ap_ready(src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472_ap_ready),
    .p_read1(ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_448),
    .ap_return(src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472_ap_return)
);

colordetect_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U111(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln138_reg_911),
    .dout(buf_cop_V_0_fu_673_p5)
);

colordetect_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U112(
    .din0(buf_V_0_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(trunc_ln138_1_reg_916),
    .dout(tmp_fu_685_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state4))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state4))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (1'b1 == ap_condition_pp3_exit_iter4_state14)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0)))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter4_state14))) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_209)) begin
        if ((1'b1 == ap_condition_414)) begin
            ap_phi_reg_pp3_iter1_arrayidx486_i181254_load_0_2_reg_366 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_arrayidx486_i181254_load_0_2_reg_366 <= ap_phi_reg_pp3_iter0_arrayidx486_i181254_load_0_2_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_209)) begin
        if (((icmp_ln878_5_fu_641_p2 == 1'd0) & (icmp_ln878_4_fu_636_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_378 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_378 <= ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_209)) begin
        if (((icmp_ln878_5_fu_641_p2 == 1'd0) & (icmp_ln878_4_fu_636_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_437 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_437 <= ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_437;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_209)) begin
        if (((icmp_ln878_5_fu_641_p2 == 1'd0) & (icmp_ln878_4_fu_636_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_448 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_448 <= ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_448;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if ((1'b1 == ap_condition_77)) begin
            ap_phi_reg_pp3_iter2_arrayidx486_i181254_load_0_2_reg_366 <= imgHelper1_4101_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter2_arrayidx486_i181254_load_0_2_reg_366 <= ap_phi_reg_pp3_iter1_arrayidx486_i181254_load_0_2_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln878_5_reg_930_pp3_iter2_reg == 1'd1) & (icmp_ln878_4_reg_926_pp3_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_437 <= tmp_fu_685_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_437 <= ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_437;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        if (((icmp_ln878_5_reg_930_pp3_iter2_reg == 1'd1) & (icmp_ln878_4_reg_926_pp3_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_448 <= ap_phi_reg_pp3_iter3_arrayidx486_i181254_load_0_2_reg_366;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_448 <= ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_448;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_reg_330 <= col_V_1_reg_921;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        col_V_reg_330 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_col_046_0_reg_262 <= 13'd0;
    end else if (((icmp_ln878_reg_873 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_col_046_0_reg_262 <= add_ln691_reg_868;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_col_V_0_reg_274 <= 13'd0;
    end else if (((icmp_ln878_1_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_col_V_0_reg_274 <= add_ln691_1_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        p_Val2_1_reg_412 <= src_buf_V_1_0_reg_400;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        p_Val2_1_reg_412 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        p_Val2_2_reg_389 <= src_buf_V_2_0_reg_424;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        p_Val2_2_reg_389 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        p_Val2_s_reg_354 <= src_buf_V_0_0_reg_342;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        p_Val2_s_reg_354 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln878_2_fu_586_p2 == 1'd0))) begin
        row_V_reg_318 <= 13'd1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        row_V_reg_318 <= row_V_1_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln878_2_fu_586_p2 == 1'd0))) begin
        row_ind_V_0_reg_306 <= row_ind_V_0_0_load_reg_850;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        row_ind_V_0_reg_306 <= row_ind_V_1_1_reg_295;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln878_2_fu_586_p2 == 1'd0))) begin
        row_ind_V_1_1_reg_295 <= row_ind_V_1_0_load_reg_855;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        row_ind_V_1_1_reg_295 <= row_ind_V_2_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln263_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_reg_251 <= init_row_ind_fu_482_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_ind_V_1_reg_251 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln878_2_fu_586_p2 == 1'd0))) begin
        row_ind_V_2_reg_285 <= row_ind_V_2_0_load_reg_860;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        row_ind_V_2_reg_285 <= row_ind_V_0_reg_306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        src_buf_V_0_0_reg_342 <= src_buf_V_0_1_reg_963;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        src_buf_V_0_0_reg_342 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        src_buf_V_1_0_reg_400 <= src_buf_V_1_1_reg_974;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        src_buf_V_1_0_reg_400 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        src_buf_V_2_0_reg_424 <= src_buf_V_2_1_reg_979;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        src_buf_V_2_0_reg_424 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln1616_reg_890 <= add_ln1616_fu_571_p2;
        icmp_ln878_2_reg_895 <= icmp_ln878_2_fu_586_p2;
        op2_assign_reg_885 <= op2_assign_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln691_reg_868 <= add_ln691_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_378 <= ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_378;
        ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_437 <= ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_437;
        ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_448 <= ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_phi_reg_pp3_iter3_arrayidx486_i181254_load_0_2_reg_366 <= ap_phi_reg_pp3_iter2_arrayidx486_i181254_load_0_2_reg_366;
        ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_378 <= ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_378;
        ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_437 <= ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_437;
        ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_448 <= ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln878_3_fu_600_p2 == 1'd1) & (icmp_ln878_2_reg_895 == 1'd0))) begin
        cmp_i_i127_i_reg_903 <= cmp_i_i127_i_fu_605_p2;
        trunc_ln124_reg_907 <= trunc_ln124_fu_610_p1;
        trunc_ln138_1_reg_916 <= trunc_ln138_1_fu_618_p1;
        trunc_ln138_reg_911 <= trunc_ln138_fu_614_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_1_reg_921 <= col_V_1_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_reg_330_pp3_iter1_reg <= col_V_reg_330;
        icmp_ln878_4_reg_926 <= icmp_ln878_4_fu_636_p2;
        icmp_ln878_4_reg_926_pp3_iter1_reg <= icmp_ln878_4_reg_926;
        icmp_ln878_5_reg_930_pp3_iter1_reg <= icmp_ln878_5_reg_930;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_840 <= empty_fu_478_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln878_4_reg_926_pp3_iter2_reg <= icmp_ln878_4_reg_926_pp3_iter1_reg;
        icmp_ln878_4_reg_926_pp3_iter3_reg <= icmp_ln878_4_reg_926_pp3_iter2_reg;
        icmp_ln878_4_reg_926_pp3_iter4_reg <= icmp_ln878_4_reg_926_pp3_iter3_reg;
        icmp_ln878_5_reg_930_pp3_iter2_reg <= icmp_ln878_5_reg_930_pp3_iter1_reg;
        icmp_ln882_reg_954_pp3_iter3_reg <= icmp_ln882_reg_954;
        icmp_ln882_reg_954_pp3_iter4_reg <= icmp_ln882_reg_954_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_fu_636_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln878_5_reg_930 <= icmp_ln878_5_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln878_reg_873 <= icmp_ln878_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter1_reg == 1'd1))) begin
        icmp_ln882_reg_954 <= icmp_ln882_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter2_reg == 1'd1))) begin
        max_V_3_reg_968 <= max_V_3_fu_716_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        max_V_7_reg_986 <= max_V_7_fu_770_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln263_fu_497_p2 == 1'd0) & (ap_phi_mux_row_ind_V_1_phi_fu_255_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_92[1 : 0] <= zext_ln301_fu_503_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_V_0_0_load_reg_850[1 : 0] <= row_ind_V_0_0_fu_92[1 : 0];
        row_ind_V_1_0_load_reg_855[1 : 0] <= row_ind_V_1_0_fu_96[1 : 0];
        row_ind_V_2_0_load_reg_860[1 : 0] <= row_ind_V_2_0_fu_100[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln263_fu_497_p2 == 1'd0) & (ap_phi_mux_row_ind_V_1_phi_fu_255_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_96[1 : 0] <= zext_ln301_fu_503_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_1_phi_fu_255_p4 == 2'd1) & ~(ap_phi_mux_row_ind_V_1_phi_fu_255_p4 == 2'd0) & (icmp_ln263_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_100[1 : 0] <= zext_ln301_fu_503_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter2_reg == 1'd1))) begin
        src_buf_V_0_1_reg_963 <= src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        src_buf_V_1_1_reg_974 <= src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_return;
        src_buf_V_2_1_reg_979 <= src_buf_V_2_1_xfExtractPixels_1_1_0_s_fu_472_ap_return;
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_532_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
        ap_condition_pp3_exit_iter4_state14 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter4_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln878_4_fu_636_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state9) & ((icmp_ln878_3_fu_600_p2 == 1'd0) | (icmp_ln878_2_reg_895 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_930_pp3_iter2_reg == 1'd1) & (icmp_ln878_4_reg_926_pp3_iter2_reg == 1'd1))) begin
        ap_phi_mux_buf_cop_V_0_0_phi_fu_382_p4 = buf_cop_V_0_fu_673_p5;
    end else begin
        ap_phi_mux_buf_cop_V_0_0_phi_fu_382_p4 = ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_378;
    end
end

always @ (*) begin
    if (((icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_col_V_phi_fu_334_p4 = col_V_1_reg_921;
    end else begin
        ap_phi_mux_col_V_phi_fu_334_p4 = col_V_reg_330;
    end
end

always @ (*) begin
    if (((icmp_ln878_reg_873 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_col_046_0_phi_fu_266_p4 = add_ln691_reg_868;
    end else begin
        ap_phi_mux_i_col_046_0_phi_fu_266_p4 = i_col_046_0_reg_262;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_1_phi_fu_416_p4 = src_buf_V_1_0_reg_400;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_416_p4 = p_Val2_1_reg_412;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_2_phi_fu_393_p4 = src_buf_V_2_0_reg_424;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_393_p4 = p_Val2_2_reg_389;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_s_phi_fu_358_p4 = src_buf_V_0_0_reg_342;
    end else begin
        ap_phi_mux_p_Val2_s_phi_fu_358_p4 = p_Val2_s_reg_354;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_4_reg_926_pp3_iter3_reg == 1'd1))) begin
        ap_phi_mux_src_buf_V_0_0_phi_fu_346_p4 = src_buf_V_0_1_reg_963;
    end else begin
        ap_phi_mux_src_buf_V_0_0_phi_fu_346_p4 = src_buf_V_0_0_reg_342;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (icmp_ln878_4_reg_926_pp3_iter4_reg == 1'd1))) begin
        ap_phi_mux_src_buf_V_1_0_phi_fu_404_p4 = src_buf_V_1_1_reg_974;
    end else begin
        ap_phi_mux_src_buf_V_1_0_phi_fu_404_p4 = src_buf_V_1_0_reg_400;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln878_3_fu_600_p2 == 1'd0) | (icmp_ln878_2_reg_895 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_2_fu_653_p1;
    end else if (((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_3_fu_646_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_V_0_address1 = zext_ln534_1_fu_557_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0)) | ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0))) begin
        buf_V_0_d1 = imgHelper1_4101_dout;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0)))) begin
        buf_V_0_d1 = 8'd255;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0)) | ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd0)) | ((icmp_ln878_1_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_2_fu_653_p1;
    end else if (((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_3_fu_646_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_V_1_address1 = zext_ln534_fu_537_p1;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1)) | ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1))) begin
        buf_V_1_d1 = 8'd255;
    end else if ((((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buf_V_1_d1 = imgHelper1_4101_dout;
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1)) | ((icmp_ln878_reg_873 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (trunc_ln124_reg_907 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_775)) begin
        if ((cmp_i_i127_i_reg_903 == 1'd1)) begin
            buf_V_2_address1 = zext_ln534_2_fu_653_p1;
        end else if ((cmp_i_i127_i_reg_903 == 1'd0)) begin
            buf_V_2_address1 = zext_ln534_3_fu_646_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln124_reg_907 == 2'd0) & ~(trunc_ln124_reg_907 == 2'd1) & (cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln124_reg_907 == 2'd0) & ~(trunc_ln124_reg_907 == 2'd1) & (cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_775)) begin
        if ((cmp_i_i127_i_reg_903 == 1'd1)) begin
            buf_V_2_d1 = imgHelper1_4101_dout;
        end else if ((cmp_i_i127_i_reg_903 == 1'd0)) begin
            buf_V_2_d1 = 8'd255;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln124_reg_907 == 2'd0) & ~(trunc_ln124_reg_907 == 2'd1) & (cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~(trunc_ln124_reg_907 == 2'd0) & ~(trunc_ln124_reg_907 == 2'd1) & (cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln878_reg_873 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        imgHelper1_4101_blk_n = imgHelper1_4101_empty_n;
    end else begin
        imgHelper1_4101_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op126_read_state11 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln878_reg_873 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        imgHelper1_4101_read = 1'b1;
    end else begin
        imgHelper1_4101_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        imgHelper2_4102_blk_n = imgHelper2_4102_full_n;
    end else begin
        imgHelper2_4102_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        imgHelper2_4102_write = 1'b1;
    end else begin
        imgHelper2_4102_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln263_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln878_fu_532_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln878_fu_532_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln878_1_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln878_3_fu_600_p2 == 1'd0) | (icmp_ln878_2_reg_895 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1616_fu_571_p2 = (empty_reg_840 + 14'd1);

assign add_ln691_1_fu_542_p2 = (i_col_V_0_reg_274 + 13'd1);

assign add_ln691_fu_522_p2 = (ap_phi_mux_i_col_046_0_phi_fu_266_p4 + 13'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln878_reg_873 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln878_reg_873 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((ap_predicate_op126_read_state11 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0)) | ((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (imgHelper2_4102_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((ap_predicate_op126_read_state11 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0)) | ((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (imgHelper2_4102_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((ap_predicate_op126_read_state11 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0)) | ((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (ap_enable_reg_pp3_iter5 == 1'b1) & (imgHelper2_4102_full_n == 1'b0)));
end

assign ap_block_state10_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp3_stage0_iter1 = ((ap_predicate_op126_read_state11 == 1'b1) & (imgHelper1_4101_empty_n == 1'b0));
end

assign ap_block_state12_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp3_stage0_iter5 = ((icmp_ln882_reg_954_pp3_iter4_reg == 1'd0) & (imgHelper2_4102_full_n == 1'b0));
end

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp1_stage0_iter1 = ((icmp_ln878_reg_873 == 1'd1) & (imgHelper1_4101_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_209 = ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_226 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_414 = ((cmp_i_i127_i_reg_903 == 1'd0) & (icmp_ln878_5_fu_641_p2 == 1'd1) & (icmp_ln878_4_fu_636_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_77 = ((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1));
end

always @ (*) begin
    ap_condition_775 = (~(trunc_ln124_reg_907 == 2'd0) & ~(trunc_ln124_reg_907 == 2'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_1_phi_fu_255_p4 = row_ind_V_1_reg_251;

assign ap_phi_reg_pp3_iter0_arrayidx486_i181254_load_0_2_reg_366 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_378 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_437 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_448 = 'bx;

always @ (*) begin
    ap_predicate_op126_read_state11 = ((cmp_i_i127_i_reg_903 == 1'd1) & (icmp_ln878_5_reg_930 == 1'd1) & (icmp_ln878_4_reg_926 == 1'd1));
end

assign buf_V_0_address0 = zext_ln1616_fu_660_p1;

assign buf_V_1_address0 = zext_ln1616_fu_660_p1;

assign buf_V_2_address0 = zext_ln1616_fu_660_p1;

assign cmp_i_i127_i_fu_605_p2 = ((zext_ln878_2_fu_592_p1 < img_height) ? 1'b1 : 1'b0);

assign col_V_1_fu_622_p2 = (ap_phi_mux_col_V_phi_fu_334_p4 + 13'd1);

assign empty_fu_478_p1 = img_width[13:0];

assign icmp_ln263_fu_497_p2 = ((row_ind_V_1_reg_251 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln878_10_fu_750_p2 = ((src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_return < max_V_5_fu_742_p3) ? 1'b1 : 1'b0);

assign icmp_ln878_11_fu_764_p2 = ((ap_phi_mux_p_Val2_2_phi_fu_393_p4 < max_V_6_fu_756_p3) ? 1'b1 : 1'b0);

assign icmp_ln878_12_fu_778_p2 = ((src_buf_V_2_0_reg_424 < max_V_7_reg_986) ? 1'b1 : 1'b0);

assign icmp_ln878_13_fu_790_p2 = ((src_buf_V_2_1_reg_979 < max_V_8_fu_783_p3) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_552_p2 = ((zext_ln878_1_fu_548_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_586_p2 = ((tmp_1_fu_576_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_600_p2 = ((zext_ln878_3_fu_596_p1 < op2_assign_reg_885) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_636_p2 = ((zext_ln878_5_fu_632_p1 < add_ln1616_reg_890) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_641_p2 = ((zext_ln878_4_fu_628_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_696_p2 = ((ap_phi_mux_src_buf_V_0_0_phi_fu_346_p4 < ap_phi_mux_p_Val2_s_phi_fu_358_p4) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_710_p2 = ((src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_return < max_V_2_fu_702_p3) ? 1'b1 : 1'b0);

assign icmp_ln878_8_fu_724_p2 = ((ap_phi_mux_p_Val2_1_phi_fu_416_p4 < max_V_3_reg_968) ? 1'b1 : 1'b0);

assign icmp_ln878_9_fu_736_p2 = ((ap_phi_mux_src_buf_V_1_0_phi_fu_404_p4 < max_V_4_fu_729_p3) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_532_p2 = ((zext_ln878_fu_528_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_667_p2 = ((col_V_reg_330_pp3_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign imgHelper2_4102_din = ((icmp_ln878_13_fu_790_p2[0:0] == 1'b1) ? src_buf_V_2_1_reg_979 : max_V_8_fu_783_p3);

assign img_height_cast_fu_562_p1 = img_height;

assign init_row_ind_fu_482_p2 = (row_ind_V_1_reg_251 + 2'd1);

assign max_V_2_fu_702_p3 = ((icmp_ln878_6_fu_696_p2[0:0] == 1'b1) ? ap_phi_mux_src_buf_V_0_0_phi_fu_346_p4 : ap_phi_mux_p_Val2_s_phi_fu_358_p4);

assign max_V_3_fu_716_p3 = ((icmp_ln878_7_fu_710_p2[0:0] == 1'b1) ? src_buf_V_0_1_xfExtractPixels_1_1_0_s_fu_460_ap_return : max_V_2_fu_702_p3);

assign max_V_4_fu_729_p3 = ((icmp_ln878_8_fu_724_p2[0:0] == 1'b1) ? ap_phi_mux_p_Val2_1_phi_fu_416_p4 : max_V_3_reg_968);

assign max_V_5_fu_742_p3 = ((icmp_ln878_9_fu_736_p2[0:0] == 1'b1) ? ap_phi_mux_src_buf_V_1_0_phi_fu_404_p4 : max_V_4_fu_729_p3);

assign max_V_6_fu_756_p3 = ((icmp_ln878_10_fu_750_p2[0:0] == 1'b1) ? src_buf_V_1_1_xfExtractPixels_1_1_0_s_fu_466_ap_return : max_V_5_fu_742_p3);

assign max_V_7_fu_770_p3 = ((icmp_ln878_11_fu_764_p2[0:0] == 1'b1) ? ap_phi_mux_p_Val2_2_phi_fu_393_p4 : max_V_6_fu_756_p3);

assign max_V_8_fu_783_p3 = ((icmp_ln878_12_fu_778_p2[0:0] == 1'b1) ? src_buf_V_2_0_reg_424 : max_V_7_reg_986);

assign op2_assign_fu_565_p2 = (img_height_cast_fu_562_p1 + 17'd1);

assign row_V_1_fu_803_p2 = (row_V_reg_318 + 13'd1);

assign tmp_1_fu_576_p4 = {{op2_assign_fu_565_p2[16:1]}};

assign trunc_ln124_fu_610_p1 = row_ind_V_2_reg_285[1:0];

assign trunc_ln138_1_fu_618_p1 = row_ind_V_1_1_reg_295[1:0];

assign trunc_ln138_fu_614_p1 = row_ind_V_0_reg_306[1:0];

assign zext_ln1616_fu_660_p1 = col_V_reg_330_pp3_iter1_reg;

assign zext_ln301_fu_503_p1 = row_ind_V_1_reg_251;

assign zext_ln534_1_fu_557_p1 = i_col_V_0_reg_274;

assign zext_ln534_2_fu_653_p1 = col_V_reg_330;

assign zext_ln534_3_fu_646_p1 = col_V_reg_330;

assign zext_ln534_fu_537_p1 = i_col_046_0_reg_262;

assign zext_ln878_1_fu_548_p1 = i_col_V_0_reg_274;

assign zext_ln878_2_fu_592_p1 = row_V_reg_318;

assign zext_ln878_3_fu_596_p1 = row_V_reg_318;

assign zext_ln878_4_fu_628_p1 = ap_phi_mux_col_V_phi_fu_334_p4;

assign zext_ln878_5_fu_632_p1 = ap_phi_mux_col_V_phi_fu_334_p4;

assign zext_ln878_fu_528_p1 = ap_phi_mux_i_col_046_0_phi_fu_266_p4;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_850[12:2] <= 11'b00000000000;
    row_ind_V_1_0_load_reg_855[12:2] <= 11'b00000000000;
    row_ind_V_2_0_load_reg_860[12:2] <= 11'b00000000000;
    row_ind_V_0_0_fu_92[12:2] <= 11'b00000000000;
    row_ind_V_1_0_fu_96[12:2] <= 11'b00000000000;
    row_ind_V_2_0_fu_100[12:2] <= 11'b00000000000;
end

endmodule //colordetect_accel_xferode_2160_3840_1_0_1_0_3841_3_3_s
